{
    "version": 3,
    "terraform_version": "0.11.12",
    "serial": 2,
    "lineage": "14ffa2d9-ed8e-230a-e088-6701aa0fb87a",
    "modules": [
        {
            "path": [
                "root"
            ],
            "outputs": {},
            "resources": {
                "data.vsphere_datacenter.dc": {
                    "type": "vsphere_datacenter",
                    "depends_on": [],
                    "primary": {
                        "id": "datacenter-2",
                        "attributes": {
                            "id": "datacenter-2",
                            "name": "Boston"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "bootstrap"
            ],
            "outputs": {
                "ip_addresses": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "10.19.114.241"
                    ]
                }
            },
            "resources": {
                "data.ignition_config.ign": {
                    "type": "ignition_config",
                    "depends_on": [
                        "data.ignition_file.hostname.*",
                        "data.ignition_file.static_ip.*",
                        "local.ignition_encoded"
                    ],
                    "primary": {
                        "id": "548fb308c75a129f17a806d5887b3b988aa1b87f846497088baded8d92b8e043",
                        "attributes": {
                            "append.#": "1",
                            "append.0.source": "data:text/plain;charset=utf-8;base64,",
                            "append.0.verification": "",
                            "files.#": "2",
                            "files.0": "96b615ed7586d580ff4ee0a22808819c5d93de95ce8dbf3037641f57fb045fc3",
                            "files.1": "b4cee1f018a3af8431a35900de34805028e84744f32ce90f84dcf7abcb044e19",
                            "id": "548fb308c75a129f17a806d5887b3b988aa1b87f846497088baded8d92b8e043",
                            "rendered": "{\"ignition\":{\"config\":{\"append\":[{\"source\":\"data:text/plain;charset=utf-8;base64,\",\"verification\":{}}]},\"timeouts\":{},\"version\":\"2.1.0\"},\"networkd\":{},\"passwd\":{},\"storage\":{\"files\":[{\"filesystem\":\"root\",\"group\":{},\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,Ym9vdHN0cmFwLTA=\",\"verification\":{}},\"mode\":420},{\"filesystem\":\"root\",\"group\":{},\"path\":\"/etc/sysconfig/network-scripts/ifcfg-ens192\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,VFlQRT1FdGhlcm5ldApCT09UUFJPVE89bm9uZQpOQU1FPWVuczE5MgpERVZJQ0U9ZW5zMTkyCk9OQk9PVD15ZXMKSVBBRERSPTEwLjE5LjExNC4yNDEKUFJFRklYPTIzCkdBVEVXQVk9MTAuMTkuMTE1LjI1NApET01BSU49dXBpLmUyZS5ib3MucmVkaGF0LmNvbQpETlMxPTEwLjE5LjE0My4yNDcKRE5TMj0xMC4xOS4xNDMuMjQ4Cg==\",\"verification\":{}},\"mode\":420}]},\"systemd\":{}}"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.bootstrap.provider.ignition"
                },
                "data.ignition_file.hostname": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "96b615ed7586d580ff4ee0a22808819c5d93de95ce8dbf3037641f57fb045fc3",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "bootstrap-0",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "96b615ed7586d580ff4ee0a22808819c5d93de95ce8dbf3037641f57fb045fc3",
                            "mode": "420",
                            "path": "/etc/hostname"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.bootstrap.provider.ignition"
                },
                "data.ignition_file.static_ip": {
                    "type": "ignition_file",
                    "depends_on": [
                        "local.gw",
                        "local.ip_addresses",
                        "local.mask"
                    ],
                    "primary": {
                        "id": "b4cee1f018a3af8431a35900de34805028e84744f32ce90f84dcf7abcb044e19",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "TYPE=Ethernet\nBOOTPROTO=none\nNAME=ens192\nDEVICE=ens192\nONBOOT=yes\nIPADDR=10.19.114.241\nPREFIX=23\nGATEWAY=10.19.115.254\nDOMAIN=upi.e2e.bos.redhat.com\nDNS1=10.19.143.247\nDNS2=10.19.143.248\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "b4cee1f018a3af8431a35900de34805028e84744f32ce90f84dcf7abcb044e19",
                            "mode": "420",
                            "path": "/etc/sysconfig/network-scripts/ifcfg-ens192"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.bootstrap.provider.ignition"
                },
                "data.vsphere_datastore.datastore": {
                    "type": "vsphere_datastore",
                    "depends_on": [],
                    "primary": {
                        "id": "datastore-13",
                        "attributes": {
                            "datacenter_id": "datacenter-2",
                            "id": "datastore-13",
                            "name": "ose3-vmware"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "data.vsphere_network.network": {
                    "type": "vsphere_network",
                    "depends_on": [],
                    "primary": {
                        "id": "network-16",
                        "attributes": {
                            "datacenter_id": "datacenter-2",
                            "id": "network-16",
                            "name": "VM Network",
                            "type": "Network"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "data.vsphere_virtual_machine.template": {
                    "type": "vsphere_virtual_machine",
                    "depends_on": [],
                    "primary": {
                        "id": "42037b07-0bc5-9302-d9d4-4cc7c682a2ab",
                        "attributes": {
                            "alternate_guest_name": "",
                            "datacenter_id": "datacenter-2",
                            "disks.#": "1",
                            "disks.0.eagerly_scrub": "false",
                            "disks.0.size": "16",
                            "disks.0.thin_provisioned": "false",
                            "firmware": "bios",
                            "guest_id": "rhel7_64Guest",
                            "id": "42037b07-0bc5-9302-d9d4-4cc7c682a2ab",
                            "name": "rhcos-4.2.0-x86_64-vmware",
                            "network_interface_types.#": "1",
                            "network_interface_types.0": "vmxnet3",
                            "scsi_bus_sharing": "noSharing",
                            "scsi_controller_scan_count": "1",
                            "scsi_type": "pvscsi"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "vsphere_virtual_machine.vm": {
                    "type": "vsphere_virtual_machine",
                    "depends_on": [
                        "data.ignition_config.ign.*",
                        "data.vsphere_datastore.datastore",
                        "data.vsphere_network.network",
                        "data.vsphere_virtual_machine.template"
                    ],
                    "primary": {
                        "id": "42037bac-0b99-16b1-00fe-ca72570bd4fa",
                        "attributes": {
                            "alternate_guest_name": "",
                            "annotation": "",
                            "boot_delay": "0",
                            "boot_retry_delay": "10000",
                            "boot_retry_enabled": "false",
                            "cdrom.#": "0",
                            "change_version": "2020-01-03T21:49:08.706788Z",
                            "clone.#": "1",
                            "clone.0.customize.#": "0",
                            "clone.0.linked_clone": "false",
                            "clone.0.template_uuid": "42037b07-0bc5-9302-d9d4-4cc7c682a2ab",
                            "clone.0.timeout": "30",
                            "cpu_hot_add_enabled": "false",
                            "cpu_hot_remove_enabled": "false",
                            "cpu_limit": "-1",
                            "cpu_performance_counters_enabled": "false",
                            "cpu_reservation": "0",
                            "cpu_share_count": "4000",
                            "cpu_share_level": "normal",
                            "custom_attributes.%": "0",
                            "datastore_id": "datastore-13",
                            "disk.#": "1",
                            "disk.0.attach": "false",
                            "disk.0.datastore_id": "datastore-13",
                            "disk.0.device_address": "scsi:0:0",
                            "disk.0.disk_mode": "persistent",
                            "disk.0.disk_sharing": "sharingNone",
                            "disk.0.eagerly_scrub": "false",
                            "disk.0.io_limit": "-1",
                            "disk.0.io_reservation": "0",
                            "disk.0.io_share_count": "1000",
                            "disk.0.io_share_level": "normal",
                            "disk.0.keep_on_remove": "false",
                            "disk.0.key": "2000",
                            "disk.0.label": "disk0",
                            "disk.0.name": "",
                            "disk.0.path": "bootstrap-0/bootstrap-0.vmdk",
                            "disk.0.size": "60",
                            "disk.0.thin_provisioned": "false",
                            "disk.0.unit_number": "0",
                            "disk.0.uuid": "6000C299-c47b-de28-c5c6-0183a17f2720",
                            "disk.0.write_through": "false",
                            "efi_secure_boot_enabled": "false",
                            "enable_disk_uuid": "true",
                            "enable_logging": "false",
                            "ept_rvi_mode": "automatic",
                            "extra_config.%": "2",
                            "extra_config.guestinfo.ignition.config.data": "",
                            "extra_config.guestinfo.ignition.config.data.encoding": "base64",
                            "firmware": "bios",
                            "folder": "upi",
                            "force_power_off": "true",
                            "guest_id": "rhel7_64Guest",
                            "guest_ip_addresses.#": "0",
                            "host_system_id": "host-12",
                            "hv_mode": "hvAuto",
                            "id": "42037bac-0b99-16b1-00fe-ca72570bd4fa",
                            "latency_sensitivity": "normal",
                            "memory": "8192",
                            "memory_hot_add_enabled": "false",
                            "memory_limit": "-1",
                            "memory_reservation": "0",
                            "memory_share_count": "81920",
                            "memory_share_level": "normal",
                            "migrate_wait_timeout": "30",
                            "moid": "vm-1772",
                            "name": "bootstrap-0",
                            "nested_hv_enabled": "false",
                            "network_interface.#": "1",
                            "network_interface.0.adapter_type": "vmxnet3",
                            "network_interface.0.bandwidth_limit": "-1",
                            "network_interface.0.bandwidth_reservation": "0",
                            "network_interface.0.bandwidth_share_count": "50",
                            "network_interface.0.bandwidth_share_level": "normal",
                            "network_interface.0.device_address": "pci:0:7",
                            "network_interface.0.key": "4000",
                            "network_interface.0.mac_address": "00:50:56:83:47:03",
                            "network_interface.0.network_id": "network-16",
                            "network_interface.0.use_static_mac": "false",
                            "num_cores_per_socket": "1",
                            "num_cpus": "4",
                            "reboot_required": "false",
                            "resource_pool_id": "resgroup-1770",
                            "run_tools_scripts_after_power_on": "true",
                            "run_tools_scripts_after_resume": "true",
                            "run_tools_scripts_before_guest_reboot": "false",
                            "run_tools_scripts_before_guest_shutdown": "true",
                            "run_tools_scripts_before_guest_standby": "true",
                            "scsi_bus_sharing": "noSharing",
                            "scsi_controller_count": "1",
                            "scsi_type": "pvscsi",
                            "shutdown_wait_timeout": "3",
                            "swap_placement_policy": "inherit",
                            "sync_time_with_host": "false",
                            "tags.#": "0",
                            "uuid": "42037bac-0b99-16b1-00fe-ca72570bd4fa",
                            "vapp_transport.#": "1",
                            "vapp_transport.0": "com.vmware.guestInfo",
                            "vmware_tools_status": "guestToolsNotRunning",
                            "vmx_path": "bootstrap-0/bootstrap-0.vmx",
                            "wait_for_guest_ip_timeout": "0",
                            "wait_for_guest_net_routable": "false",
                            "wait_for_guest_net_timeout": "0"
                        },
                        "meta": {
                            "schema_version": "3"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "compute"
            ],
            "outputs": {
                "ip_addresses": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "10.19.114.245",
                        "10.19.114.246",
                        "10.19.114.247"
                    ]
                }
            },
            "resources": {
                "data.ignition_config.ign.0": {
                    "type": "ignition_config",
                    "depends_on": [
                        "data.ignition_file.hostname.*",
                        "data.ignition_file.static_ip.*",
                        "local.ignition_encoded"
                    ],
                    "primary": {
                        "id": "eb59ee4f92b13ae4fd7d77fc94d385316f4f768a108c2c1433146e2dfc475824",
                        "attributes": {
                            "append.#": "1",
                            "append.0.source": "data:text/plain;charset=utf-8;base64,eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJodHRwczovL2FwaS1pbnQudXBpLmUyZS5ib3MucmVkaGF0LmNvbToyMjYyMy9jb25maWcvd29ya2VyIiwidmVyaWZpY2F0aW9uIjp7fX1dfSwic2VjdXJpdHkiOnsidGxzIjp7ImNlcnRpZmljYXRlQXV0aG9yaXRpZXMiOlt7InNvdXJjZSI6ImRhdGE6dGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRlJFTkRRV1pwWjBGM1NVSkJaMGxKWTA5cmIwVkdSazQyZDJOM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVsM1RVUkZkMDE2U1hoT1JGbDZUVEZ2V0FwRVZFazFUVlJKZWsxVVNYaE9SRmw2VFRGdmQwcHFSVk5OUWtGSFFURlZSVU40VFVwaU0wSnNZbTVPYjJGWFdqQk5Va0YzUkdkWlJGWlJVVVJGZDJSNUNtSXlPVEJNVjA1b1RVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVFd01tMVZRbHBWYUVocE1YVUtRMGQ2YkRSRVNHdHRLelYyTjJKWGNFd3dNbkZWVUhkeVZYSTVZV1ZZWjJwbGRXVmhhazlOV0VGblUzZFJaSHBYVm1VdmVXMVlNMlJVYm5oSVFUSXdWUXBLY1dKNVdqVllhMGh2UjJGcmNWTlJUV0ZKWkZKbmNWSnJNaTh5VmxWd1pVRmtNM2xXTTA4NFFtWnJXazE0UWpoallXUmxMemMxU2tWWU9VVTBVMjFqQ204ck5rRklhVVpGYlc5aVFtVk9OSE5GVUZGR1prOWtkMUpTUzNKVVZXUXdRblppZUVOQmIwUTRkR1k0WWtOVGIydE5SamRTUjJGblZqQjZTMlpyTVVRS1lUWjBNRUpZUVhwbldsTjNVakJNYlU1QmNIcHdjVGxyU25OQ09UQlRUV1l3VEVFMlZGcHRUM1kzVm1NdldrRmFTRVpFU1RKVFRXTTNWMnhHYWtsa2NRcFFhRmgyTVhobkswVldSek4wUkRBeFYwOVpiSHByT1NzcmMwUlJObmRrYjBvemN6TlROelJ0UVRSU09EUXJiSFpWYW5GTlNrVkJPRWRXZVdGWlluSTFDbU12WmpCRGQxaHllWGRKUkVGUlFVSnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSVUpCVFVOQmNWRjNSSGRaUkZaU01GUkJVVWd2UWtGVmQwRjNSVUlLTDNwQlpFSm5UbFpJVVRSRlJtZFJWV3d5ZGtwcFNEbGhURnBNTmpsdWVGbFJTMDFCTURaWk0weFlhM2RFVVZsS1MyOWFTV2gyWTA1QlVVVk1RbEZCUkFwblowVkNRVTE1THpGSFJtVnZaa1pyVHpaaGVWbE5VMDFKYUVaWWVtZElPWFZVVFRGdU5EUjFXalJTUVRCRVNuUlRjRUZGV2t4dlZVaEZjRzF0UjNwM0NsbEZkVWgwYm1SWU5WaFZVbVJNUVhaaVltNVlhMEZ4WVRGWll5dEVka05yTDBaUVZVdExMMDB5SzFReFNGTkxWVkl6UW5KMlFuQndaRWxRY200MGMzb0tkVlp2SzBVeWFXMUpWMmh6WlZCeVJtdG5kakZWWTBSSU9EWndWQzl1TDBoUk5VNTJWMHBrZDBsWU5VOUpTVkYwU0ZSNEx6QTVZVTVOWTFsV2QybEhWUXBUWnprNFkxcHhXbEp1Tm5ZcmVEZHdkMnRWT1hOeVEwdzBXWFJqVm5WdVZVeDBSWFJXU1VaMVdITTJXa3RWWTBReFYxSjRhRW8wZVdwUk5XUlZOeXQxQ2xCWk1YVnFaMUE1T1VneFkweE5RVlJaTkV4a1VFMTJWeTh5T1dZdlYxZGtTVEpPYzBWNVJUbEVkM000U2tWdloyVnVNWGNyVlVSSWFIWkVWRkkwYXpJS00zSnNVWG81TmpOemFrVTVjVTgzUVhCa1MzbDJOemR1UjIxUlBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0iLCJ2ZXJpZmljYXRpb24iOnt9fV19fSwidGltZW91dHMiOnt9LCJ2ZXJzaW9uIjoiMi4yLjAifSwibmV0d29ya2QiOnt9LCJwYXNzd2QiOnt9LCJzdG9yYWdlIjp7fSwic3lzdGVtZCI6e319",
                            "append.0.verification": "",
                            "files.#": "2",
                            "files.0": "37cb0d6ae78c6a1605286cc8070f084949a99933a4320e111c37cf31e79127f7",
                            "files.1": "05ff5ab502902ddc6b6f54c3ad7ae718586dc5aec3b2f87b7fda9495c4a8a647",
                            "id": "eb59ee4f92b13ae4fd7d77fc94d385316f4f768a108c2c1433146e2dfc475824",
                            "rendered": "{\"ignition\":{\"config\":{\"append\":[{\"source\":\"data:text/plain;charset=utf-8;base64,eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJodHRwczovL2FwaS1pbnQudXBpLmUyZS5ib3MucmVkaGF0LmNvbToyMjYyMy9jb25maWcvd29ya2VyIiwidmVyaWZpY2F0aW9uIjp7fX1dfSwic2VjdXJpdHkiOnsidGxzIjp7ImNlcnRpZmljYXRlQXV0aG9yaXRpZXMiOlt7InNvdXJjZSI6ImRhdGE6dGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRlJFTkRRV1pwWjBGM1NVSkJaMGxKWTA5cmIwVkdSazQyZDJOM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVsM1RVUkZkMDE2U1hoT1JGbDZUVEZ2V0FwRVZFazFUVlJKZWsxVVNYaE9SRmw2VFRGdmQwcHFSVk5OUWtGSFFURlZSVU40VFVwaU0wSnNZbTVPYjJGWFdqQk5Va0YzUkdkWlJGWlJVVVJGZDJSNUNtSXlPVEJNVjA1b1RVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVFd01tMVZRbHBWYUVocE1YVUtRMGQ2YkRSRVNHdHRLelYyTjJKWGNFd3dNbkZWVUhkeVZYSTVZV1ZZWjJwbGRXVmhhazlOV0VGblUzZFJaSHBYVm1VdmVXMVlNMlJVYm5oSVFUSXdWUXBLY1dKNVdqVllhMGh2UjJGcmNWTlJUV0ZKWkZKbmNWSnJNaTh5VmxWd1pVRmtNM2xXTTA4NFFtWnJXazE0UWpoallXUmxMemMxU2tWWU9VVTBVMjFqQ204ck5rRklhVVpGYlc5aVFtVk9OSE5GVUZGR1prOWtkMUpTUzNKVVZXUXdRblppZUVOQmIwUTRkR1k0WWtOVGIydE5SamRTUjJGblZqQjZTMlpyTVVRS1lUWjBNRUpZUVhwbldsTjNVakJNYlU1QmNIcHdjVGxyU25OQ09UQlRUV1l3VEVFMlZGcHRUM1kzVm1NdldrRmFTRVpFU1RKVFRXTTNWMnhHYWtsa2NRcFFhRmgyTVhobkswVldSek4wUkRBeFYwOVpiSHByT1NzcmMwUlJObmRrYjBvemN6TlROelJ0UVRSU09EUXJiSFpWYW5GTlNrVkJPRWRXZVdGWlluSTFDbU12WmpCRGQxaHllWGRKUkVGUlFVSnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSVUpCVFVOQmNWRjNSSGRaUkZaU01GUkJVVWd2UWtGVmQwRjNSVUlLTDNwQlpFSm5UbFpJVVRSRlJtZFJWV3d5ZGtwcFNEbGhURnBNTmpsdWVGbFJTMDFCTURaWk0weFlhM2RFVVZsS1MyOWFTV2gyWTA1QlVVVk1RbEZCUkFwblowVkNRVTE1THpGSFJtVnZaa1pyVHpaaGVWbE5VMDFKYUVaWWVtZElPWFZVVFRGdU5EUjFXalJTUVRCRVNuUlRjRUZGV2t4dlZVaEZjRzF0UjNwM0NsbEZkVWgwYm1SWU5WaFZVbVJNUVhaaVltNVlhMEZ4WVRGWll5dEVka05yTDBaUVZVdExMMDB5SzFReFNGTkxWVkl6UW5KMlFuQndaRWxRY200MGMzb0tkVlp2SzBVeWFXMUpWMmh6WlZCeVJtdG5kakZWWTBSSU9EWndWQzl1TDBoUk5VNTJWMHBrZDBsWU5VOUpTVkYwU0ZSNEx6QTVZVTVOWTFsV2QybEhWUXBUWnprNFkxcHhXbEp1Tm5ZcmVEZHdkMnRWT1hOeVEwdzBXWFJqVm5WdVZVeDBSWFJXU1VaMVdITTJXa3RWWTBReFYxSjRhRW8wZVdwUk5XUlZOeXQxQ2xCWk1YVnFaMUE1T1VneFkweE5RVlJaTkV4a1VFMTJWeTh5T1dZdlYxZGtTVEpPYzBWNVJUbEVkM000U2tWdloyVnVNWGNyVlVSSWFIWkVWRkkwYXpJS00zSnNVWG81TmpOemFrVTVjVTgzUVhCa1MzbDJOemR1UjIxUlBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0iLCJ2ZXJpZmljYXRpb24iOnt9fV19fSwidGltZW91dHMiOnt9LCJ2ZXJzaW9uIjoiMi4yLjAifSwibmV0d29ya2QiOnt9LCJwYXNzd2QiOnt9LCJzdG9yYWdlIjp7fSwic3lzdGVtZCI6e319\",\"verification\":{}}]},\"timeouts\":{},\"version\":\"2.1.0\"},\"networkd\":{},\"passwd\":{},\"storage\":{\"files\":[{\"filesystem\":\"root\",\"group\":{},\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,Y29tcHV0ZS0w\",\"verification\":{}},\"mode\":420},{\"filesystem\":\"root\",\"group\":{},\"path\":\"/etc/sysconfig/network-scripts/ifcfg-ens192\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,VFlQRT1FdGhlcm5ldApCT09UUFJPVE89bm9uZQpOQU1FPWVuczE5MgpERVZJQ0U9ZW5zMTkyCk9OQk9PVD15ZXMKSVBBRERSPTEwLjE5LjExNC4yNDUKUFJFRklYPTIzCkdBVEVXQVk9MTAuMTkuMTE1LjI1NApET01BSU49dXBpLmUyZS5ib3MucmVkaGF0LmNvbQpETlMxPTEwLjE5LjE0My4yNDcKRE5TMj0xMC4xOS4xNDMuMjQ4Cg==\",\"verification\":{}},\"mode\":420}]},\"systemd\":{}}"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.compute.provider.ignition"
                },
                "data.ignition_config.ign.1": {
                    "type": "ignition_config",
                    "depends_on": [
                        "data.ignition_file.hostname.*",
                        "data.ignition_file.static_ip.*",
                        "local.ignition_encoded"
                    ],
                    "primary": {
                        "id": "493ea84427a123305169a59df6923ab64deb6bd8b6a123218fd4d6acbaecfd21",
                        "attributes": {
                            "append.#": "1",
                            "append.0.source": "data:text/plain;charset=utf-8;base64,eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJodHRwczovL2FwaS1pbnQudXBpLmUyZS5ib3MucmVkaGF0LmNvbToyMjYyMy9jb25maWcvd29ya2VyIiwidmVyaWZpY2F0aW9uIjp7fX1dfSwic2VjdXJpdHkiOnsidGxzIjp7ImNlcnRpZmljYXRlQXV0aG9yaXRpZXMiOlt7InNvdXJjZSI6ImRhdGE6dGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRlJFTkRRV1pwWjBGM1NVSkJaMGxKWTA5cmIwVkdSazQyZDJOM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVsM1RVUkZkMDE2U1hoT1JGbDZUVEZ2V0FwRVZFazFUVlJKZWsxVVNYaE9SRmw2VFRGdmQwcHFSVk5OUWtGSFFURlZSVU40VFVwaU0wSnNZbTVPYjJGWFdqQk5Va0YzUkdkWlJGWlJVVVJGZDJSNUNtSXlPVEJNVjA1b1RVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVFd01tMVZRbHBWYUVocE1YVUtRMGQ2YkRSRVNHdHRLelYyTjJKWGNFd3dNbkZWVUhkeVZYSTVZV1ZZWjJwbGRXVmhhazlOV0VGblUzZFJaSHBYVm1VdmVXMVlNMlJVYm5oSVFUSXdWUXBLY1dKNVdqVllhMGh2UjJGcmNWTlJUV0ZKWkZKbmNWSnJNaTh5VmxWd1pVRmtNM2xXTTA4NFFtWnJXazE0UWpoallXUmxMemMxU2tWWU9VVTBVMjFqQ204ck5rRklhVVpGYlc5aVFtVk9OSE5GVUZGR1prOWtkMUpTUzNKVVZXUXdRblppZUVOQmIwUTRkR1k0WWtOVGIydE5SamRTUjJGblZqQjZTMlpyTVVRS1lUWjBNRUpZUVhwbldsTjNVakJNYlU1QmNIcHdjVGxyU25OQ09UQlRUV1l3VEVFMlZGcHRUM1kzVm1NdldrRmFTRVpFU1RKVFRXTTNWMnhHYWtsa2NRcFFhRmgyTVhobkswVldSek4wUkRBeFYwOVpiSHByT1NzcmMwUlJObmRrYjBvemN6TlROelJ0UVRSU09EUXJiSFpWYW5GTlNrVkJPRWRXZVdGWlluSTFDbU12WmpCRGQxaHllWGRKUkVGUlFVSnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSVUpCVFVOQmNWRjNSSGRaUkZaU01GUkJVVWd2UWtGVmQwRjNSVUlLTDNwQlpFSm5UbFpJVVRSRlJtZFJWV3d5ZGtwcFNEbGhURnBNTmpsdWVGbFJTMDFCTURaWk0weFlhM2RFVVZsS1MyOWFTV2gyWTA1QlVVVk1RbEZCUkFwblowVkNRVTE1THpGSFJtVnZaa1pyVHpaaGVWbE5VMDFKYUVaWWVtZElPWFZVVFRGdU5EUjFXalJTUVRCRVNuUlRjRUZGV2t4dlZVaEZjRzF0UjNwM0NsbEZkVWgwYm1SWU5WaFZVbVJNUVhaaVltNVlhMEZ4WVRGWll5dEVka05yTDBaUVZVdExMMDB5SzFReFNGTkxWVkl6UW5KMlFuQndaRWxRY200MGMzb0tkVlp2SzBVeWFXMUpWMmh6WlZCeVJtdG5kakZWWTBSSU9EWndWQzl1TDBoUk5VNTJWMHBrZDBsWU5VOUpTVkYwU0ZSNEx6QTVZVTVOWTFsV2QybEhWUXBUWnprNFkxcHhXbEp1Tm5ZcmVEZHdkMnRWT1hOeVEwdzBXWFJqVm5WdVZVeDBSWFJXU1VaMVdITTJXa3RWWTBReFYxSjRhRW8wZVdwUk5XUlZOeXQxQ2xCWk1YVnFaMUE1T1VneFkweE5RVlJaTkV4a1VFMTJWeTh5T1dZdlYxZGtTVEpPYzBWNVJUbEVkM000U2tWdloyVnVNWGNyVlVSSWFIWkVWRkkwYXpJS00zSnNVWG81TmpOemFrVTVjVTgzUVhCa1MzbDJOemR1UjIxUlBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0iLCJ2ZXJpZmljYXRpb24iOnt9fV19fSwidGltZW91dHMiOnt9LCJ2ZXJzaW9uIjoiMi4yLjAifSwibmV0d29ya2QiOnt9LCJwYXNzd2QiOnt9LCJzdG9yYWdlIjp7fSwic3lzdGVtZCI6e319",
                            "append.0.verification": "",
                            "files.#": "2",
                            "files.0": "1e97e2d3a67b78b2544f52624b027104ac05fa7935eb463cc91b2a41216a43fe",
                            "files.1": "ca37faaade934de43257bb8aa0e18989fcbbaa209a3b147e05ad67fab400a082",
                            "id": "493ea84427a123305169a59df6923ab64deb6bd8b6a123218fd4d6acbaecfd21",
                            "rendered": "{\"ignition\":{\"config\":{\"append\":[{\"source\":\"data:text/plain;charset=utf-8;base64,eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJodHRwczovL2FwaS1pbnQudXBpLmUyZS5ib3MucmVkaGF0LmNvbToyMjYyMy9jb25maWcvd29ya2VyIiwidmVyaWZpY2F0aW9uIjp7fX1dfSwic2VjdXJpdHkiOnsidGxzIjp7ImNlcnRpZmljYXRlQXV0aG9yaXRpZXMiOlt7InNvdXJjZSI6ImRhdGE6dGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRlJFTkRRV1pwWjBGM1NVSkJaMGxKWTA5cmIwVkdSazQyZDJOM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVsM1RVUkZkMDE2U1hoT1JGbDZUVEZ2V0FwRVZFazFUVlJKZWsxVVNYaE9SRmw2VFRGdmQwcHFSVk5OUWtGSFFURlZSVU40VFVwaU0wSnNZbTVPYjJGWFdqQk5Va0YzUkdkWlJGWlJVVVJGZDJSNUNtSXlPVEJNVjA1b1RVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVFd01tMVZRbHBWYUVocE1YVUtRMGQ2YkRSRVNHdHRLelYyTjJKWGNFd3dNbkZWVUhkeVZYSTVZV1ZZWjJwbGRXVmhhazlOV0VGblUzZFJaSHBYVm1VdmVXMVlNMlJVYm5oSVFUSXdWUXBLY1dKNVdqVllhMGh2UjJGcmNWTlJUV0ZKWkZKbmNWSnJNaTh5VmxWd1pVRmtNM2xXTTA4NFFtWnJXazE0UWpoallXUmxMemMxU2tWWU9VVTBVMjFqQ204ck5rRklhVVpGYlc5aVFtVk9OSE5GVUZGR1prOWtkMUpTUzNKVVZXUXdRblppZUVOQmIwUTRkR1k0WWtOVGIydE5SamRTUjJGblZqQjZTMlpyTVVRS1lUWjBNRUpZUVhwbldsTjNVakJNYlU1QmNIcHdjVGxyU25OQ09UQlRUV1l3VEVFMlZGcHRUM1kzVm1NdldrRmFTRVpFU1RKVFRXTTNWMnhHYWtsa2NRcFFhRmgyTVhobkswVldSek4wUkRBeFYwOVpiSHByT1NzcmMwUlJObmRrYjBvemN6TlROelJ0UVRSU09EUXJiSFpWYW5GTlNrVkJPRWRXZVdGWlluSTFDbU12WmpCRGQxaHllWGRKUkVGUlFVSnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSVUpCVFVOQmNWRjNSSGRaUkZaU01GUkJVVWd2UWtGVmQwRjNSVUlLTDNwQlpFSm5UbFpJVVRSRlJtZFJWV3d5ZGtwcFNEbGhURnBNTmpsdWVGbFJTMDFCTURaWk0weFlhM2RFVVZsS1MyOWFTV2gyWTA1QlVVVk1RbEZCUkFwblowVkNRVTE1THpGSFJtVnZaa1pyVHpaaGVWbE5VMDFKYUVaWWVtZElPWFZVVFRGdU5EUjFXalJTUVRCRVNuUlRjRUZGV2t4dlZVaEZjRzF0UjNwM0NsbEZkVWgwYm1SWU5WaFZVbVJNUVhaaVltNVlhMEZ4WVRGWll5dEVka05yTDBaUVZVdExMMDB5SzFReFNGTkxWVkl6UW5KMlFuQndaRWxRY200MGMzb0tkVlp2SzBVeWFXMUpWMmh6WlZCeVJtdG5kakZWWTBSSU9EWndWQzl1TDBoUk5VNTJWMHBrZDBsWU5VOUpTVkYwU0ZSNEx6QTVZVTVOWTFsV2QybEhWUXBUWnprNFkxcHhXbEp1Tm5ZcmVEZHdkMnRWT1hOeVEwdzBXWFJqVm5WdVZVeDBSWFJXU1VaMVdITTJXa3RWWTBReFYxSjRhRW8wZVdwUk5XUlZOeXQxQ2xCWk1YVnFaMUE1T1VneFkweE5RVlJaTkV4a1VFMTJWeTh5T1dZdlYxZGtTVEpPYzBWNVJUbEVkM000U2tWdloyVnVNWGNyVlVSSWFIWkVWRkkwYXpJS00zSnNVWG81TmpOemFrVTVjVTgzUVhCa1MzbDJOemR1UjIxUlBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0iLCJ2ZXJpZmljYXRpb24iOnt9fV19fSwidGltZW91dHMiOnt9LCJ2ZXJzaW9uIjoiMi4yLjAifSwibmV0d29ya2QiOnt9LCJwYXNzd2QiOnt9LCJzdG9yYWdlIjp7fSwic3lzdGVtZCI6e319\",\"verification\":{}}]},\"timeouts\":{},\"version\":\"2.1.0\"},\"networkd\":{},\"passwd\":{},\"storage\":{\"files\":[{\"filesystem\":\"root\",\"group\":{},\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,Y29tcHV0ZS0x\",\"verification\":{}},\"mode\":420},{\"filesystem\":\"root\",\"group\":{},\"path\":\"/etc/sysconfig/network-scripts/ifcfg-ens192\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,VFlQRT1FdGhlcm5ldApCT09UUFJPVE89bm9uZQpOQU1FPWVuczE5MgpERVZJQ0U9ZW5zMTkyCk9OQk9PVD15ZXMKSVBBRERSPTEwLjE5LjExNC4yNDYKUFJFRklYPTIzCkdBVEVXQVk9MTAuMTkuMTE1LjI1NApET01BSU49dXBpLmUyZS5ib3MucmVkaGF0LmNvbQpETlMxPTEwLjE5LjE0My4yNDcKRE5TMj0xMC4xOS4xNDMuMjQ4Cg==\",\"verification\":{}},\"mode\":420}]},\"systemd\":{}}"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.compute.provider.ignition"
                },
                "data.ignition_config.ign.2": {
                    "type": "ignition_config",
                    "depends_on": [
                        "data.ignition_file.hostname.*",
                        "data.ignition_file.static_ip.*",
                        "local.ignition_encoded"
                    ],
                    "primary": {
                        "id": "98087aa64fa962ebcb1b5fec92d7db0ae0512b9512ff2e70d3d47e9f79ac2f46",
                        "attributes": {
                            "append.#": "1",
                            "append.0.source": "data:text/plain;charset=utf-8;base64,eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJodHRwczovL2FwaS1pbnQudXBpLmUyZS5ib3MucmVkaGF0LmNvbToyMjYyMy9jb25maWcvd29ya2VyIiwidmVyaWZpY2F0aW9uIjp7fX1dfSwic2VjdXJpdHkiOnsidGxzIjp7ImNlcnRpZmljYXRlQXV0aG9yaXRpZXMiOlt7InNvdXJjZSI6ImRhdGE6dGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRlJFTkRRV1pwWjBGM1NVSkJaMGxKWTA5cmIwVkdSazQyZDJOM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVsM1RVUkZkMDE2U1hoT1JGbDZUVEZ2V0FwRVZFazFUVlJKZWsxVVNYaE9SRmw2VFRGdmQwcHFSVk5OUWtGSFFURlZSVU40VFVwaU0wSnNZbTVPYjJGWFdqQk5Va0YzUkdkWlJGWlJVVVJGZDJSNUNtSXlPVEJNVjA1b1RVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVFd01tMVZRbHBWYUVocE1YVUtRMGQ2YkRSRVNHdHRLelYyTjJKWGNFd3dNbkZWVUhkeVZYSTVZV1ZZWjJwbGRXVmhhazlOV0VGblUzZFJaSHBYVm1VdmVXMVlNMlJVYm5oSVFUSXdWUXBLY1dKNVdqVllhMGh2UjJGcmNWTlJUV0ZKWkZKbmNWSnJNaTh5VmxWd1pVRmtNM2xXTTA4NFFtWnJXazE0UWpoallXUmxMemMxU2tWWU9VVTBVMjFqQ204ck5rRklhVVpGYlc5aVFtVk9OSE5GVUZGR1prOWtkMUpTUzNKVVZXUXdRblppZUVOQmIwUTRkR1k0WWtOVGIydE5SamRTUjJGblZqQjZTMlpyTVVRS1lUWjBNRUpZUVhwbldsTjNVakJNYlU1QmNIcHdjVGxyU25OQ09UQlRUV1l3VEVFMlZGcHRUM1kzVm1NdldrRmFTRVpFU1RKVFRXTTNWMnhHYWtsa2NRcFFhRmgyTVhobkswVldSek4wUkRBeFYwOVpiSHByT1NzcmMwUlJObmRrYjBvemN6TlROelJ0UVRSU09EUXJiSFpWYW5GTlNrVkJPRWRXZVdGWlluSTFDbU12WmpCRGQxaHllWGRKUkVGUlFVSnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSVUpCVFVOQmNWRjNSSGRaUkZaU01GUkJVVWd2UWtGVmQwRjNSVUlLTDNwQlpFSm5UbFpJVVRSRlJtZFJWV3d5ZGtwcFNEbGhURnBNTmpsdWVGbFJTMDFCTURaWk0weFlhM2RFVVZsS1MyOWFTV2gyWTA1QlVVVk1RbEZCUkFwblowVkNRVTE1THpGSFJtVnZaa1pyVHpaaGVWbE5VMDFKYUVaWWVtZElPWFZVVFRGdU5EUjFXalJTUVRCRVNuUlRjRUZGV2t4dlZVaEZjRzF0UjNwM0NsbEZkVWgwYm1SWU5WaFZVbVJNUVhaaVltNVlhMEZ4WVRGWll5dEVka05yTDBaUVZVdExMMDB5SzFReFNGTkxWVkl6UW5KMlFuQndaRWxRY200MGMzb0tkVlp2SzBVeWFXMUpWMmh6WlZCeVJtdG5kakZWWTBSSU9EWndWQzl1TDBoUk5VNTJWMHBrZDBsWU5VOUpTVkYwU0ZSNEx6QTVZVTVOWTFsV2QybEhWUXBUWnprNFkxcHhXbEp1Tm5ZcmVEZHdkMnRWT1hOeVEwdzBXWFJqVm5WdVZVeDBSWFJXU1VaMVdITTJXa3RWWTBReFYxSjRhRW8wZVdwUk5XUlZOeXQxQ2xCWk1YVnFaMUE1T1VneFkweE5RVlJaTkV4a1VFMTJWeTh5T1dZdlYxZGtTVEpPYzBWNVJUbEVkM000U2tWdloyVnVNWGNyVlVSSWFIWkVWRkkwYXpJS00zSnNVWG81TmpOemFrVTVjVTgzUVhCa1MzbDJOemR1UjIxUlBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0iLCJ2ZXJpZmljYXRpb24iOnt9fV19fSwidGltZW91dHMiOnt9LCJ2ZXJzaW9uIjoiMi4yLjAifSwibmV0d29ya2QiOnt9LCJwYXNzd2QiOnt9LCJzdG9yYWdlIjp7fSwic3lzdGVtZCI6e319",
                            "append.0.verification": "",
                            "files.#": "2",
                            "files.0": "cca261ede34b98f5c327426e47fdd9c2fc9b13a98b79d2754c64af648a2c0bb7",
                            "files.1": "5309b3e4d818f8efef4f1fbf7395f71195699db69ae62b572a014cd691c474b2",
                            "id": "98087aa64fa962ebcb1b5fec92d7db0ae0512b9512ff2e70d3d47e9f79ac2f46",
                            "rendered": "{\"ignition\":{\"config\":{\"append\":[{\"source\":\"data:text/plain;charset=utf-8;base64,eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJodHRwczovL2FwaS1pbnQudXBpLmUyZS5ib3MucmVkaGF0LmNvbToyMjYyMy9jb25maWcvd29ya2VyIiwidmVyaWZpY2F0aW9uIjp7fX1dfSwic2VjdXJpdHkiOnsidGxzIjp7ImNlcnRpZmljYXRlQXV0aG9yaXRpZXMiOlt7InNvdXJjZSI6ImRhdGE6dGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRlJFTkRRV1pwWjBGM1NVSkJaMGxKWTA5cmIwVkdSazQyZDJOM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVsM1RVUkZkMDE2U1hoT1JGbDZUVEZ2V0FwRVZFazFUVlJKZWsxVVNYaE9SRmw2VFRGdmQwcHFSVk5OUWtGSFFURlZSVU40VFVwaU0wSnNZbTVPYjJGWFdqQk5Va0YzUkdkWlJGWlJVVVJGZDJSNUNtSXlPVEJNVjA1b1RVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVFd01tMVZRbHBWYUVocE1YVUtRMGQ2YkRSRVNHdHRLelYyTjJKWGNFd3dNbkZWVUhkeVZYSTVZV1ZZWjJwbGRXVmhhazlOV0VGblUzZFJaSHBYVm1VdmVXMVlNMlJVYm5oSVFUSXdWUXBLY1dKNVdqVllhMGh2UjJGcmNWTlJUV0ZKWkZKbmNWSnJNaTh5VmxWd1pVRmtNM2xXTTA4NFFtWnJXazE0UWpoallXUmxMemMxU2tWWU9VVTBVMjFqQ204ck5rRklhVVpGYlc5aVFtVk9OSE5GVUZGR1prOWtkMUpTUzNKVVZXUXdRblppZUVOQmIwUTRkR1k0WWtOVGIydE5SamRTUjJGblZqQjZTMlpyTVVRS1lUWjBNRUpZUVhwbldsTjNVakJNYlU1QmNIcHdjVGxyU25OQ09UQlRUV1l3VEVFMlZGcHRUM1kzVm1NdldrRmFTRVpFU1RKVFRXTTNWMnhHYWtsa2NRcFFhRmgyTVhobkswVldSek4wUkRBeFYwOVpiSHByT1NzcmMwUlJObmRrYjBvemN6TlROelJ0UVRSU09EUXJiSFpWYW5GTlNrVkJPRWRXZVdGWlluSTFDbU12WmpCRGQxaHllWGRKUkVGUlFVSnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSVUpCVFVOQmNWRjNSSGRaUkZaU01GUkJVVWd2UWtGVmQwRjNSVUlLTDNwQlpFSm5UbFpJVVRSRlJtZFJWV3d5ZGtwcFNEbGhURnBNTmpsdWVGbFJTMDFCTURaWk0weFlhM2RFVVZsS1MyOWFTV2gyWTA1QlVVVk1RbEZCUkFwblowVkNRVTE1THpGSFJtVnZaa1pyVHpaaGVWbE5VMDFKYUVaWWVtZElPWFZVVFRGdU5EUjFXalJTUVRCRVNuUlRjRUZGV2t4dlZVaEZjRzF0UjNwM0NsbEZkVWgwYm1SWU5WaFZVbVJNUVhaaVltNVlhMEZ4WVRGWll5dEVka05yTDBaUVZVdExMMDB5SzFReFNGTkxWVkl6UW5KMlFuQndaRWxRY200MGMzb0tkVlp2SzBVeWFXMUpWMmh6WlZCeVJtdG5kakZWWTBSSU9EWndWQzl1TDBoUk5VNTJWMHBrZDBsWU5VOUpTVkYwU0ZSNEx6QTVZVTVOWTFsV2QybEhWUXBUWnprNFkxcHhXbEp1Tm5ZcmVEZHdkMnRWT1hOeVEwdzBXWFJqVm5WdVZVeDBSWFJXU1VaMVdITTJXa3RWWTBReFYxSjRhRW8wZVdwUk5XUlZOeXQxQ2xCWk1YVnFaMUE1T1VneFkweE5RVlJaTkV4a1VFMTJWeTh5T1dZdlYxZGtTVEpPYzBWNVJUbEVkM000U2tWdloyVnVNWGNyVlVSSWFIWkVWRkkwYXpJS00zSnNVWG81TmpOemFrVTVjVTgzUVhCa1MzbDJOemR1UjIxUlBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0iLCJ2ZXJpZmljYXRpb24iOnt9fV19fSwidGltZW91dHMiOnt9LCJ2ZXJzaW9uIjoiMi4yLjAifSwibmV0d29ya2QiOnt9LCJwYXNzd2QiOnt9LCJzdG9yYWdlIjp7fSwic3lzdGVtZCI6e319\",\"verification\":{}}]},\"timeouts\":{},\"version\":\"2.1.0\"},\"networkd\":{},\"passwd\":{},\"storage\":{\"files\":[{\"filesystem\":\"root\",\"group\":{},\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,Y29tcHV0ZS0y\",\"verification\":{}},\"mode\":420},{\"filesystem\":\"root\",\"group\":{},\"path\":\"/etc/sysconfig/network-scripts/ifcfg-ens192\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,VFlQRT1FdGhlcm5ldApCT09UUFJPVE89bm9uZQpOQU1FPWVuczE5MgpERVZJQ0U9ZW5zMTkyCk9OQk9PVD15ZXMKSVBBRERSPTEwLjE5LjExNC4yNDcKUFJFRklYPTIzCkdBVEVXQVk9MTAuMTkuMTE1LjI1NApET01BSU49dXBpLmUyZS5ib3MucmVkaGF0LmNvbQpETlMxPTEwLjE5LjE0My4yNDcKRE5TMj0xMC4xOS4xNDMuMjQ4Cg==\",\"verification\":{}},\"mode\":420}]},\"systemd\":{}}"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.compute.provider.ignition"
                },
                "data.ignition_file.hostname.0": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "37cb0d6ae78c6a1605286cc8070f084949a99933a4320e111c37cf31e79127f7",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "compute-0",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "37cb0d6ae78c6a1605286cc8070f084949a99933a4320e111c37cf31e79127f7",
                            "mode": "420",
                            "path": "/etc/hostname"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.compute.provider.ignition"
                },
                "data.ignition_file.hostname.1": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "1e97e2d3a67b78b2544f52624b027104ac05fa7935eb463cc91b2a41216a43fe",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "compute-1",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "1e97e2d3a67b78b2544f52624b027104ac05fa7935eb463cc91b2a41216a43fe",
                            "mode": "420",
                            "path": "/etc/hostname"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.compute.provider.ignition"
                },
                "data.ignition_file.hostname.2": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "cca261ede34b98f5c327426e47fdd9c2fc9b13a98b79d2754c64af648a2c0bb7",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "compute-2",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "cca261ede34b98f5c327426e47fdd9c2fc9b13a98b79d2754c64af648a2c0bb7",
                            "mode": "420",
                            "path": "/etc/hostname"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.compute.provider.ignition"
                },
                "data.ignition_file.static_ip.0": {
                    "type": "ignition_file",
                    "depends_on": [
                        "local.gw",
                        "local.ip_addresses",
                        "local.mask"
                    ],
                    "primary": {
                        "id": "05ff5ab502902ddc6b6f54c3ad7ae718586dc5aec3b2f87b7fda9495c4a8a647",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "TYPE=Ethernet\nBOOTPROTO=none\nNAME=ens192\nDEVICE=ens192\nONBOOT=yes\nIPADDR=10.19.114.245\nPREFIX=23\nGATEWAY=10.19.115.254\nDOMAIN=upi.e2e.bos.redhat.com\nDNS1=10.19.143.247\nDNS2=10.19.143.248\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "05ff5ab502902ddc6b6f54c3ad7ae718586dc5aec3b2f87b7fda9495c4a8a647",
                            "mode": "420",
                            "path": "/etc/sysconfig/network-scripts/ifcfg-ens192"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.compute.provider.ignition"
                },
                "data.ignition_file.static_ip.1": {
                    "type": "ignition_file",
                    "depends_on": [
                        "local.gw",
                        "local.ip_addresses",
                        "local.mask"
                    ],
                    "primary": {
                        "id": "ca37faaade934de43257bb8aa0e18989fcbbaa209a3b147e05ad67fab400a082",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "TYPE=Ethernet\nBOOTPROTO=none\nNAME=ens192\nDEVICE=ens192\nONBOOT=yes\nIPADDR=10.19.114.246\nPREFIX=23\nGATEWAY=10.19.115.254\nDOMAIN=upi.e2e.bos.redhat.com\nDNS1=10.19.143.247\nDNS2=10.19.143.248\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "ca37faaade934de43257bb8aa0e18989fcbbaa209a3b147e05ad67fab400a082",
                            "mode": "420",
                            "path": "/etc/sysconfig/network-scripts/ifcfg-ens192"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.compute.provider.ignition"
                },
                "data.ignition_file.static_ip.2": {
                    "type": "ignition_file",
                    "depends_on": [
                        "local.gw",
                        "local.ip_addresses",
                        "local.mask"
                    ],
                    "primary": {
                        "id": "5309b3e4d818f8efef4f1fbf7395f71195699db69ae62b572a014cd691c474b2",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "TYPE=Ethernet\nBOOTPROTO=none\nNAME=ens192\nDEVICE=ens192\nONBOOT=yes\nIPADDR=10.19.114.247\nPREFIX=23\nGATEWAY=10.19.115.254\nDOMAIN=upi.e2e.bos.redhat.com\nDNS1=10.19.143.247\nDNS2=10.19.143.248\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "5309b3e4d818f8efef4f1fbf7395f71195699db69ae62b572a014cd691c474b2",
                            "mode": "420",
                            "path": "/etc/sysconfig/network-scripts/ifcfg-ens192"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.compute.provider.ignition"
                },
                "data.vsphere_datastore.datastore": {
                    "type": "vsphere_datastore",
                    "depends_on": [],
                    "primary": {
                        "id": "datastore-13",
                        "attributes": {
                            "datacenter_id": "datacenter-2",
                            "id": "datastore-13",
                            "name": "ose3-vmware"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "data.vsphere_network.network": {
                    "type": "vsphere_network",
                    "depends_on": [],
                    "primary": {
                        "id": "network-16",
                        "attributes": {
                            "datacenter_id": "datacenter-2",
                            "id": "network-16",
                            "name": "VM Network",
                            "type": "Network"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "data.vsphere_virtual_machine.template": {
                    "type": "vsphere_virtual_machine",
                    "depends_on": [],
                    "primary": {
                        "id": "42037b07-0bc5-9302-d9d4-4cc7c682a2ab",
                        "attributes": {
                            "alternate_guest_name": "",
                            "datacenter_id": "datacenter-2",
                            "disks.#": "1",
                            "disks.0.eagerly_scrub": "false",
                            "disks.0.size": "16",
                            "disks.0.thin_provisioned": "false",
                            "firmware": "bios",
                            "guest_id": "rhel7_64Guest",
                            "id": "42037b07-0bc5-9302-d9d4-4cc7c682a2ab",
                            "name": "rhcos-4.2.0-x86_64-vmware",
                            "network_interface_types.#": "1",
                            "network_interface_types.0": "vmxnet3",
                            "scsi_bus_sharing": "noSharing",
                            "scsi_controller_scan_count": "1",
                            "scsi_type": "pvscsi"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "vsphere_virtual_machine.vm.0": {
                    "type": "vsphere_virtual_machine",
                    "depends_on": [
                        "data.ignition_config.ign.*",
                        "data.vsphere_datastore.datastore",
                        "data.vsphere_network.network",
                        "data.vsphere_virtual_machine.template"
                    ],
                    "primary": {
                        "id": "4203473a-b628-8445-93ee-46296a66fb80",
                        "attributes": {
                            "alternate_guest_name": "",
                            "annotation": "",
                            "boot_delay": "0",
                            "boot_retry_delay": "10000",
                            "boot_retry_enabled": "false",
                            "cdrom.#": "0",
                            "change_version": "2020-01-03T21:49:08.196563Z",
                            "clone.#": "1",
                            "clone.0.customize.#": "0",
                            "clone.0.linked_clone": "false",
                            "clone.0.template_uuid": "42037b07-0bc5-9302-d9d4-4cc7c682a2ab",
                            "clone.0.timeout": "30",
                            "cpu_hot_add_enabled": "false",
                            "cpu_hot_remove_enabled": "false",
                            "cpu_limit": "-1",
                            "cpu_performance_counters_enabled": "false",
                            "cpu_reservation": "0",
                            "cpu_share_count": "4000",
                            "cpu_share_level": "normal",
                            "custom_attributes.%": "0",
                            "datastore_id": "datastore-13",
                            "disk.#": "1",
                            "disk.0.attach": "false",
                            "disk.0.datastore_id": "datastore-13",
                            "disk.0.device_address": "scsi:0:0",
                            "disk.0.disk_mode": "persistent",
                            "disk.0.disk_sharing": "sharingNone",
                            "disk.0.eagerly_scrub": "false",
                            "disk.0.io_limit": "-1",
                            "disk.0.io_reservation": "0",
                            "disk.0.io_share_count": "1000",
                            "disk.0.io_share_level": "normal",
                            "disk.0.keep_on_remove": "false",
                            "disk.0.key": "2000",
                            "disk.0.label": "disk0",
                            "disk.0.name": "",
                            "disk.0.path": "compute-0/compute-0.vmdk",
                            "disk.0.size": "60",
                            "disk.0.thin_provisioned": "false",
                            "disk.0.unit_number": "0",
                            "disk.0.uuid": "6000C294-de57-e5de-85c8-081ac74c84e4",
                            "disk.0.write_through": "false",
                            "efi_secure_boot_enabled": "false",
                            "enable_disk_uuid": "true",
                            "enable_logging": "false",
                            "ept_rvi_mode": "automatic",
                            "extra_config.%": "2",
                            "extra_config.guestinfo.ignition.config.data": "eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJkYXRhOnRleHQvcGxhaW47Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKcFoyNXBkR2x2YmlJNmV5SmpiMjVtYVdjaU9uc2lZWEJ3Wlc1a0lqcGJleUp6YjNWeVkyVWlPaUpvZEhSd2N6b3ZMMkZ3YVMxcGJuUXVkWEJwTG1VeVpTNWliM011Y21Wa2FHRjBMbU52YlRveU1qWXlNeTlqYjI1bWFXY3ZkMjl5YTJWeUlpd2lkbVZ5YVdacFkyRjBhVzl1SWpwN2ZYMWRmU3dpYzJWamRYSnBkSGtpT25zaWRHeHpJanA3SW1ObGNuUnBabWxqWVhSbFFYVjBhRzl5YVhScFpYTWlPbHQ3SW5OdmRYSmpaU0k2SW1SaGRHRTZkR1Y0ZEM5d2JHRnBianRqYUdGeWMyVjBQWFYwWmkwNE8ySmhjMlUyTkN4TVV6QjBURk14UTFKVlpFcFVhVUpFVWxaS1ZWTlZXa3BSTUVaVlVsTXdkRXhUTUhSRGF6RktVMVZTUmxKRlRrUlJWMXB3V2pCR00xTlZTa0phTUd4S1dUQTVjbUl3VmtkU2F6UXlaREpPTTFKR1JscFRhM1IyVjJ0c2IyUnRUazlSVmtaR1ZFVktVbEZZWkV0aGExWlVWRlZLUWxJd1JYaFdWVlZMVVROb1RsTnRTWHBSYlhocFltczFkbGxXWkdGTlJURlRVVmhrUlZveGJFVldiRVpTVWtWV00xcEliR2xOYW10M1ZFWmtUMkZGTVVOT1JtaEZWa1ZzTTFSVlVrWmtNREUyVTFob1QxSkdiRFpVVkVaMlYwRndSVlpGYXpGVVZsSktaV3N4VlZOWWFFOVNSbXcyVkZSR2RtUXdjSEZTVms1T1VXdEdTRkZVUmxaU1ZVNDBWRlZ3YVUwd1NuTlpiVFZQWWpKR1dGZHFRazVWYTBZelVrZGtXbEpHV2xKVlZWSkdaREpTTlVOdFNYbFBWRUpOVmpBMWIxUlZiRXBSYTJ4eFVWVTFRMW95ZEhoaFIzUndVbnBzTTAxRlNrSlZWVlpIVVZWR1VGRXdSbEpQUlVaT1UxVnNRMUV5WkV4Uk1FWlNVbFZGZDAxdE1WWlJiSEJXWVVWb2NFMVlWVXRSTUdRMllrUlNSVk5IZEhSTGVsWXlUakpLV0dORmQzZE5ia1pXVlVoa2VWWllTVFZaVjFaWldqSndiR1JYVm1oaGF6bE9WMFZHYmxVelpGSmFTSEJZVm0xVmRtVlhNVmxOTWxKVlltNW9TVkZVU1hkV1VYQkxZMWRLTlZkcVZsbGhNR2gyVWpKR2NtTldUbEpVVjBaS1drWktibU5XU25KTmFUaDVWbXhXZDFwVlJtdE5NMnhYVFRBNE5GRnRXbkpYYXpFMFVXcG9hbGxYVW14TWVtTXhVMnRXV1U5VlZUQlZNakZxUTIwNGNrNXJSa2xoVlZwR1lsYzVhVkZ0Vms5T1NFNUdWVVpHUjFwck9XdGtNVXBUVXpOS1ZWWlhVWGRSYmxwcFpVVk9RbUl3VVRSa1IxazBXV3RPVkdJeWRFNVNhbVJUVWpKR2JsWnFRalpUTWxweVRWVlJTMWxVV2pCTlJVcFpVVmh3Ymxkc1RqTlZha0pOWWxVMVFtTkljSGRqVkd4eVUyNU9RMDlVUWxSVVYxbDNWRVZGTWxaR2NIUlVNMWt6Vm0xTmRsZHJSbUZUUlZwRlUxUktWRlJYVFROV01uaEhZV3RzYTJOUmNGRmhSbWd5VFZob2Jrc3dWbGRTZWs0d1VrUkJlRll3T1ZwaVNIQnlUMU56Y21Nd1VsSk9ibVJyWWpCdmVtTjZUbFJPZWxKMFVWUlNVMDlFVVhKaVNGcFdZVzVHVGxOclZrSlBSV1JYWlZkR1dsbHVTVEZEYlUxMldtcENSR1F4YUhsbFdHUktVa1ZHVWxGVlNuWk5SV3d6VlZWU1FsUXdTbTVVYkZwSlZWUm9RMUZYV1RSU1ZVcENWRlZPUW1OV1JqTlNTR1JhVWtaYVUwMUdVa0pWVldkMlVXdEdWbVF3UmpOU1ZVbExURE53UWxwRlNtNVViRnBKVlZSU1JsSnRaRkpXVjNkNVpHdHdjRk5FYkdoVVJuQk5UbXBzZFdWR2JGSlRNREZDVFVSYVdrMHdlRmxoTTJSRlZWWnNTMU15T1dGVFYyZ3lXVEExUWxWVlZrMVJiRVpDVWtGd2Jsb3dWa05SVlRFMVRIcEdTRkp0Vm5aYWExcHlWSHBhYUdWV2JFNVZNREZLWVVWYVdXVnRaRWxQV0ZaVlZGUkdkVTVFVWpGWGFsSlRVVlJDUlZOdVVsUmpSVVpHVjJ0NGRsWlZhRVpqUnpGMFVqTndNME5zYkVaa1ZXZ3dZbTFTV1U1V2FGWlZiVkpOVVZoYWFWbHROVmxoTUVaNFdWUkdXbGw1ZEVWa2EwNXlUREJhVVZaVmRFeE1NREI1U3pGUmVGTkdUa3hXVmtsNlVXNUtNbEZ1UW5kYVJXeFJZMjAwTUdNemIwdGtWbHAyU3pCVmVXRlhNVXBXTW1oNldsWkNlVkp0ZEc1a2FrWldXVEJTU1U5RVduZFdRemwxVERCb1VrNVZOVEpXTUhCclpEQnNXVTVWT1VwVFZrWXdVMFpTTkV4NlFUVlpWVFZPV1RGc1YyUXliRWhXVVhCVVducHJORmt4Y0hoWGJFcDFUbTVaY21WRVpIZGtNblJXVDFoT2VWRXdkekJYV0ZKcVZtNVdkVlpWZURCU1dGSlhVMVZhTVZkSVRUSlhhM1JXV1RCUmVGWXhTalJoUlc4d1pWZHdVazVYVWxaT2VYUXhRMnhDV2sxWVZuRmFNVUUxVDFWbmVGa3dlRTVSVmxKYVRrVjRhMVZGTVRKV2VUaDVUMWRaZGxZeFpHdFRWRXBQWXpCV05WSlViRVZrTTAwMFUydFdkbG95Vm5WTldHTnlWbFZTU1dGSVdrVldSa2t3WVhwSlMwMHpTbk5WV0c4MVRtcE9lbUZyVlRWalZUZ3pVVmhDYTFNemJESk9lbVIxVWpJeFVsQlJiM1JNVXpCMFRGVldUMUpEUWtSU1ZrcFZVMVZhU2xFd1JsVlNVekIwVEZNd2RFTm5QVDBpTENKMlpYSnBabWxqWVhScGIyNGlPbnQ5ZlYxOWZTd2lkR2x0Wlc5MWRITWlPbnQ5TENKMlpYSnphVzl1SWpvaU1pNHlMakFpZlN3aWJtVjBkMjl5YTJRaU9udDlMQ0p3WVhOemQyUWlPbnQ5TENKemRHOXlZV2RsSWpwN2ZTd2ljM2x6ZEdWdFpDSTZlMzE5IiwidmVyaWZpY2F0aW9uIjp7fX1dfSwidGltZW91dHMiOnt9LCJ2ZXJzaW9uIjoiMi4xLjAifSwibmV0d29ya2QiOnt9LCJwYXNzd2QiOnt9LCJzdG9yYWdlIjp7ImZpbGVzIjpbeyJmaWxlc3lzdGVtIjoicm9vdCIsImdyb3VwIjp7fSwicGF0aCI6Ii9ldGMvaG9zdG5hbWUiLCJ1c2VyIjp7fSwiY29udGVudHMiOnsic291cmNlIjoiZGF0YTp0ZXh0L3BsYWluO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFkyOXRjSFYwWlMwdyIsInZlcmlmaWNhdGlvbiI6e319LCJtb2RlIjo0MjB9LHsiZmlsZXN5c3RlbSI6InJvb3QiLCJncm91cCI6e30sInBhdGgiOiIvZXRjL3N5c2NvbmZpZy9uZXR3b3JrLXNjcmlwdHMvaWZjZmctZW5zMTkyIiwidXNlciI6e30sImNvbnRlbnRzIjp7InNvdXJjZSI6ImRhdGE6dGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxWRmxRUlQxRmRHaGxjbTVsZEFwQ1QwOVVVRkpQVkU4OWJtOXVaUXBPUVUxRlBXVnVjekU1TWdwRVJWWkpRMFU5Wlc1ek1Ua3lDazlPUWs5UFZEMTVaWE1LU1ZCQlJFUlNQVEV3TGpFNUxqRXhOQzR5TkRVS1VGSkZSa2xZUFRJekNrZEJWRVZYUVZrOU1UQXVNVGt1TVRFMUxqSTFOQXBFVDAxQlNVNDlkWEJwTG1VeVpTNWliM011Y21Wa2FHRjBMbU52YlFwRVRsTXhQVEV3TGpFNUxqRTBNeTR5TkRjS1JFNVRNajB4TUM0eE9TNHhORE11TWpRNENnPT0iLCJ2ZXJpZmljYXRpb24iOnt9fSwibW9kZSI6NDIwfV19LCJzeXN0ZW1kIjp7fX0=",
                            "extra_config.guestinfo.ignition.config.data.encoding": "base64",
                            "firmware": "bios",
                            "folder": "upi",
                            "force_power_off": "true",
                            "guest_id": "rhel7_64Guest",
                            "guest_ip_addresses.#": "0",
                            "host_system_id": "host-37",
                            "hv_mode": "hvAuto",
                            "id": "4203473a-b628-8445-93ee-46296a66fb80",
                            "latency_sensitivity": "normal",
                            "memory": "16384",
                            "memory_hot_add_enabled": "false",
                            "memory_limit": "-1",
                            "memory_reservation": "0",
                            "memory_share_count": "163840",
                            "memory_share_level": "normal",
                            "migrate_wait_timeout": "30",
                            "moid": "vm-1775",
                            "name": "compute-0",
                            "nested_hv_enabled": "false",
                            "network_interface.#": "1",
                            "network_interface.0.adapter_type": "vmxnet3",
                            "network_interface.0.bandwidth_limit": "-1",
                            "network_interface.0.bandwidth_reservation": "0",
                            "network_interface.0.bandwidth_share_count": "50",
                            "network_interface.0.bandwidth_share_level": "normal",
                            "network_interface.0.device_address": "pci:0:7",
                            "network_interface.0.key": "4000",
                            "network_interface.0.mac_address": "00:50:56:83:d2:55",
                            "network_interface.0.network_id": "network-16",
                            "network_interface.0.use_static_mac": "false",
                            "num_cores_per_socket": "1",
                            "num_cpus": "4",
                            "reboot_required": "false",
                            "resource_pool_id": "resgroup-1770",
                            "run_tools_scripts_after_power_on": "true",
                            "run_tools_scripts_after_resume": "true",
                            "run_tools_scripts_before_guest_reboot": "false",
                            "run_tools_scripts_before_guest_shutdown": "true",
                            "run_tools_scripts_before_guest_standby": "true",
                            "scsi_bus_sharing": "noSharing",
                            "scsi_controller_count": "1",
                            "scsi_type": "pvscsi",
                            "shutdown_wait_timeout": "3",
                            "swap_placement_policy": "inherit",
                            "sync_time_with_host": "false",
                            "tags.#": "0",
                            "uuid": "4203473a-b628-8445-93ee-46296a66fb80",
                            "vapp_transport.#": "1",
                            "vapp_transport.0": "com.vmware.guestInfo",
                            "vmware_tools_status": "guestToolsNotRunning",
                            "vmx_path": "compute-0/compute-0.vmx",
                            "wait_for_guest_ip_timeout": "0",
                            "wait_for_guest_net_routable": "false",
                            "wait_for_guest_net_timeout": "0"
                        },
                        "meta": {
                            "schema_version": "3"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "vsphere_virtual_machine.vm.1": {
                    "type": "vsphere_virtual_machine",
                    "depends_on": [
                        "data.ignition_config.ign.*",
                        "data.vsphere_datastore.datastore",
                        "data.vsphere_network.network",
                        "data.vsphere_virtual_machine.template"
                    ],
                    "primary": {
                        "id": "4203e310-3851-dfef-a4d0-7bee926183c5",
                        "attributes": {
                            "alternate_guest_name": "",
                            "annotation": "",
                            "boot_delay": "0",
                            "boot_retry_delay": "10000",
                            "boot_retry_enabled": "false",
                            "cdrom.#": "0",
                            "change_version": "2020-01-03T21:48:49.123576Z",
                            "clone.#": "1",
                            "clone.0.customize.#": "0",
                            "clone.0.linked_clone": "false",
                            "clone.0.template_uuid": "42037b07-0bc5-9302-d9d4-4cc7c682a2ab",
                            "clone.0.timeout": "30",
                            "cpu_hot_add_enabled": "false",
                            "cpu_hot_remove_enabled": "false",
                            "cpu_limit": "-1",
                            "cpu_performance_counters_enabled": "false",
                            "cpu_reservation": "0",
                            "cpu_share_count": "4000",
                            "cpu_share_level": "normal",
                            "custom_attributes.%": "0",
                            "datastore_id": "datastore-13",
                            "disk.#": "1",
                            "disk.0.attach": "false",
                            "disk.0.datastore_id": "datastore-13",
                            "disk.0.device_address": "scsi:0:0",
                            "disk.0.disk_mode": "persistent",
                            "disk.0.disk_sharing": "sharingNone",
                            "disk.0.eagerly_scrub": "false",
                            "disk.0.io_limit": "-1",
                            "disk.0.io_reservation": "0",
                            "disk.0.io_share_count": "1000",
                            "disk.0.io_share_level": "normal",
                            "disk.0.keep_on_remove": "false",
                            "disk.0.key": "2000",
                            "disk.0.label": "disk0",
                            "disk.0.name": "",
                            "disk.0.path": "compute-1/compute-1.vmdk",
                            "disk.0.size": "60",
                            "disk.0.thin_provisioned": "false",
                            "disk.0.unit_number": "0",
                            "disk.0.uuid": "6000C292-21e7-770a-b10f-24c615eac0ea",
                            "disk.0.write_through": "false",
                            "efi_secure_boot_enabled": "false",
                            "enable_disk_uuid": "true",
                            "enable_logging": "false",
                            "ept_rvi_mode": "automatic",
                            "extra_config.%": "2",
                            "extra_config.guestinfo.ignition.config.data": "eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJkYXRhOnRleHQvcGxhaW47Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKcFoyNXBkR2x2YmlJNmV5SmpiMjVtYVdjaU9uc2lZWEJ3Wlc1a0lqcGJleUp6YjNWeVkyVWlPaUpvZEhSd2N6b3ZMMkZ3YVMxcGJuUXVkWEJwTG1VeVpTNWliM011Y21Wa2FHRjBMbU52YlRveU1qWXlNeTlqYjI1bWFXY3ZkMjl5YTJWeUlpd2lkbVZ5YVdacFkyRjBhVzl1SWpwN2ZYMWRmU3dpYzJWamRYSnBkSGtpT25zaWRHeHpJanA3SW1ObGNuUnBabWxqWVhSbFFYVjBhRzl5YVhScFpYTWlPbHQ3SW5OdmRYSmpaU0k2SW1SaGRHRTZkR1Y0ZEM5d2JHRnBianRqYUdGeWMyVjBQWFYwWmkwNE8ySmhjMlUyTkN4TVV6QjBURk14UTFKVlpFcFVhVUpFVWxaS1ZWTlZXa3BSTUVaVlVsTXdkRXhUTUhSRGF6RktVMVZTUmxKRlRrUlJWMXB3V2pCR00xTlZTa0phTUd4S1dUQTVjbUl3VmtkU2F6UXlaREpPTTFKR1JscFRhM1IyVjJ0c2IyUnRUazlSVmtaR1ZFVktVbEZZWkV0aGExWlVWRlZLUWxJd1JYaFdWVlZMVVROb1RsTnRTWHBSYlhocFltczFkbGxXWkdGTlJURlRVVmhrUlZveGJFVldiRVpTVWtWV00xcEliR2xOYW10M1ZFWmtUMkZGTVVOT1JtaEZWa1ZzTTFSVlVrWmtNREUyVTFob1QxSkdiRFpVVkVaMlYwRndSVlpGYXpGVVZsSktaV3N4VlZOWWFFOVNSbXcyVkZSR2RtUXdjSEZTVms1T1VXdEdTRkZVUmxaU1ZVNDBWRlZ3YVUwd1NuTlpiVFZQWWpKR1dGZHFRazVWYTBZelVrZGtXbEpHV2xKVlZWSkdaREpTTlVOdFNYbFBWRUpOVmpBMWIxUlZiRXBSYTJ4eFVWVTFRMW95ZEhoaFIzUndVbnBzTTAxRlNrSlZWVlpIVVZWR1VGRXdSbEpQUlVaT1UxVnNRMUV5WkV4Uk1FWlNVbFZGZDAxdE1WWlJiSEJXWVVWb2NFMVlWVXRSTUdRMllrUlNSVk5IZEhSTGVsWXlUakpLV0dORmQzZE5ia1pXVlVoa2VWWllTVFZaVjFaWldqSndiR1JYVm1oaGF6bE9WMFZHYmxVelpGSmFTSEJZVm0xVmRtVlhNVmxOTWxKVlltNW9TVkZVU1hkV1VYQkxZMWRLTlZkcVZsbGhNR2gyVWpKR2NtTldUbEpVVjBaS1drWktibU5XU25KTmFUaDVWbXhXZDFwVlJtdE5NMnhYVFRBNE5GRnRXbkpYYXpFMFVXcG9hbGxYVW14TWVtTXhVMnRXV1U5VlZUQlZNakZxUTIwNGNrNXJSa2xoVlZwR1lsYzVhVkZ0Vms5T1NFNUdWVVpHUjFwck9XdGtNVXBUVXpOS1ZWWlhVWGRSYmxwcFpVVk9RbUl3VVRSa1IxazBXV3RPVkdJeWRFNVNhbVJUVWpKR2JsWnFRalpUTWxweVRWVlJTMWxVV2pCTlJVcFpVVmh3Ymxkc1RqTlZha0pOWWxVMVFtTkljSGRqVkd4eVUyNU9RMDlVUWxSVVYxbDNWRVZGTWxaR2NIUlVNMWt6Vm0xTmRsZHJSbUZUUlZwRlUxUktWRlJYVFROV01uaEhZV3RzYTJOUmNGRmhSbWd5VFZob2Jrc3dWbGRTZWs0d1VrUkJlRll3T1ZwaVNIQnlUMU56Y21Nd1VsSk9ibVJyWWpCdmVtTjZUbFJPZWxKMFVWUlNVMDlFVVhKaVNGcFdZVzVHVGxOclZrSlBSV1JYWlZkR1dsbHVTVEZEYlUxMldtcENSR1F4YUhsbFdHUktVa1ZHVWxGVlNuWk5SV3d6VlZWU1FsUXdTbTVVYkZwSlZWUm9RMUZYV1RSU1ZVcENWRlZPUW1OV1JqTlNTR1JhVWtaYVUwMUdVa0pWVldkMlVXdEdWbVF3UmpOU1ZVbExURE53UWxwRlNtNVViRnBKVlZSU1JsSnRaRkpXVjNkNVpHdHdjRk5FYkdoVVJuQk5UbXBzZFdWR2JGSlRNREZDVFVSYVdrMHdlRmxoTTJSRlZWWnNTMU15T1dGVFYyZ3lXVEExUWxWVlZrMVJiRVpDVWtGd2Jsb3dWa05SVlRFMVRIcEdTRkp0Vm5aYWExcHlWSHBhYUdWV2JFNVZNREZLWVVWYVdXVnRaRWxQV0ZaVlZGUkdkVTVFVWpGWGFsSlRVVlJDUlZOdVVsUmpSVVpHVjJ0NGRsWlZhRVpqUnpGMFVqTndNME5zYkVaa1ZXZ3dZbTFTV1U1V2FGWlZiVkpOVVZoYWFWbHROVmxoTUVaNFdWUkdXbGw1ZEVWa2EwNXlUREJhVVZaVmRFeE1NREI1U3pGUmVGTkdUa3hXVmtsNlVXNUtNbEZ1UW5kYVJXeFJZMjAwTUdNemIwdGtWbHAyU3pCVmVXRlhNVXBXTW1oNldsWkNlVkp0ZEc1a2FrWldXVEJTU1U5RVduZFdRemwxVERCb1VrNVZOVEpXTUhCclpEQnNXVTVWT1VwVFZrWXdVMFpTTkV4NlFUVlpWVFZPV1RGc1YyUXliRWhXVVhCVVducHJORmt4Y0hoWGJFcDFUbTVaY21WRVpIZGtNblJXVDFoT2VWRXdkekJYV0ZKcVZtNVdkVlpWZURCU1dGSlhVMVZhTVZkSVRUSlhhM1JXV1RCUmVGWXhTalJoUlc4d1pWZHdVazVYVWxaT2VYUXhRMnhDV2sxWVZuRmFNVUUxVDFWbmVGa3dlRTVSVmxKYVRrVjRhMVZGTVRKV2VUaDVUMWRaZGxZeFpHdFRWRXBQWXpCV05WSlViRVZrTTAwMFUydFdkbG95Vm5WTldHTnlWbFZTU1dGSVdrVldSa2t3WVhwSlMwMHpTbk5WV0c4MVRtcE9lbUZyVlRWalZUZ3pVVmhDYTFNemJESk9lbVIxVWpJeFVsQlJiM1JNVXpCMFRGVldUMUpEUWtSU1ZrcFZVMVZhU2xFd1JsVlNVekIwVEZNd2RFTm5QVDBpTENKMlpYSnBabWxqWVhScGIyNGlPbnQ5ZlYxOWZTd2lkR2x0Wlc5MWRITWlPbnQ5TENKMlpYSnphVzl1SWpvaU1pNHlMakFpZlN3aWJtVjBkMjl5YTJRaU9udDlMQ0p3WVhOemQyUWlPbnQ5TENKemRHOXlZV2RsSWpwN2ZTd2ljM2x6ZEdWdFpDSTZlMzE5IiwidmVyaWZpY2F0aW9uIjp7fX1dfSwidGltZW91dHMiOnt9LCJ2ZXJzaW9uIjoiMi4xLjAifSwibmV0d29ya2QiOnt9LCJwYXNzd2QiOnt9LCJzdG9yYWdlIjp7ImZpbGVzIjpbeyJmaWxlc3lzdGVtIjoicm9vdCIsImdyb3VwIjp7fSwicGF0aCI6Ii9ldGMvaG9zdG5hbWUiLCJ1c2VyIjp7fSwiY29udGVudHMiOnsic291cmNlIjoiZGF0YTp0ZXh0L3BsYWluO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFkyOXRjSFYwWlMweCIsInZlcmlmaWNhdGlvbiI6e319LCJtb2RlIjo0MjB9LHsiZmlsZXN5c3RlbSI6InJvb3QiLCJncm91cCI6e30sInBhdGgiOiIvZXRjL3N5c2NvbmZpZy9uZXR3b3JrLXNjcmlwdHMvaWZjZmctZW5zMTkyIiwidXNlciI6e30sImNvbnRlbnRzIjp7InNvdXJjZSI6ImRhdGE6dGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxWRmxRUlQxRmRHaGxjbTVsZEFwQ1QwOVVVRkpQVkU4OWJtOXVaUXBPUVUxRlBXVnVjekU1TWdwRVJWWkpRMFU5Wlc1ek1Ua3lDazlPUWs5UFZEMTVaWE1LU1ZCQlJFUlNQVEV3TGpFNUxqRXhOQzR5TkRZS1VGSkZSa2xZUFRJekNrZEJWRVZYUVZrOU1UQXVNVGt1TVRFMUxqSTFOQXBFVDAxQlNVNDlkWEJwTG1VeVpTNWliM011Y21Wa2FHRjBMbU52YlFwRVRsTXhQVEV3TGpFNUxqRTBNeTR5TkRjS1JFNVRNajB4TUM0eE9TNHhORE11TWpRNENnPT0iLCJ2ZXJpZmljYXRpb24iOnt9fSwibW9kZSI6NDIwfV19LCJzeXN0ZW1kIjp7fX0=",
                            "extra_config.guestinfo.ignition.config.data.encoding": "base64",
                            "firmware": "bios",
                            "folder": "upi",
                            "force_power_off": "true",
                            "guest_id": "rhel7_64Guest",
                            "guest_ip_addresses.#": "0",
                            "host_system_id": "host-1718",
                            "hv_mode": "hvAuto",
                            "id": "4203e310-3851-dfef-a4d0-7bee926183c5",
                            "latency_sensitivity": "normal",
                            "memory": "16384",
                            "memory_hot_add_enabled": "false",
                            "memory_limit": "-1",
                            "memory_reservation": "0",
                            "memory_share_count": "163840",
                            "memory_share_level": "normal",
                            "migrate_wait_timeout": "30",
                            "moid": "vm-1776",
                            "name": "compute-1",
                            "nested_hv_enabled": "false",
                            "network_interface.#": "1",
                            "network_interface.0.adapter_type": "vmxnet3",
                            "network_interface.0.bandwidth_limit": "-1",
                            "network_interface.0.bandwidth_reservation": "0",
                            "network_interface.0.bandwidth_share_count": "50",
                            "network_interface.0.bandwidth_share_level": "normal",
                            "network_interface.0.device_address": "pci:0:7",
                            "network_interface.0.key": "4000",
                            "network_interface.0.mac_address": "00:50:56:83:55:22",
                            "network_interface.0.network_id": "network-16",
                            "network_interface.0.use_static_mac": "false",
                            "num_cores_per_socket": "1",
                            "num_cpus": "4",
                            "reboot_required": "false",
                            "resource_pool_id": "resgroup-1770",
                            "run_tools_scripts_after_power_on": "true",
                            "run_tools_scripts_after_resume": "true",
                            "run_tools_scripts_before_guest_reboot": "false",
                            "run_tools_scripts_before_guest_shutdown": "true",
                            "run_tools_scripts_before_guest_standby": "true",
                            "scsi_bus_sharing": "noSharing",
                            "scsi_controller_count": "1",
                            "scsi_type": "pvscsi",
                            "shutdown_wait_timeout": "3",
                            "swap_placement_policy": "inherit",
                            "sync_time_with_host": "false",
                            "tags.#": "0",
                            "uuid": "4203e310-3851-dfef-a4d0-7bee926183c5",
                            "vapp_transport.#": "1",
                            "vapp_transport.0": "com.vmware.guestInfo",
                            "vmware_tools_status": "guestToolsNotRunning",
                            "vmx_path": "compute-1/compute-1.vmx",
                            "wait_for_guest_ip_timeout": "0",
                            "wait_for_guest_net_routable": "false",
                            "wait_for_guest_net_timeout": "0"
                        },
                        "meta": {
                            "schema_version": "3"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "vsphere_virtual_machine.vm.2": {
                    "type": "vsphere_virtual_machine",
                    "depends_on": [
                        "data.ignition_config.ign.*",
                        "data.vsphere_datastore.datastore",
                        "data.vsphere_network.network",
                        "data.vsphere_virtual_machine.template"
                    ],
                    "primary": {
                        "id": "42036761-3e8f-87ec-ac66-05096c0abb3f",
                        "attributes": {
                            "alternate_guest_name": "",
                            "annotation": "",
                            "boot_delay": "0",
                            "boot_retry_delay": "10000",
                            "boot_retry_enabled": "false",
                            "cdrom.#": "0",
                            "change_version": "2020-01-03T21:48:44.77425Z",
                            "clone.#": "1",
                            "clone.0.customize.#": "0",
                            "clone.0.linked_clone": "false",
                            "clone.0.template_uuid": "42037b07-0bc5-9302-d9d4-4cc7c682a2ab",
                            "clone.0.timeout": "30",
                            "cpu_hot_add_enabled": "false",
                            "cpu_hot_remove_enabled": "false",
                            "cpu_limit": "-1",
                            "cpu_performance_counters_enabled": "false",
                            "cpu_reservation": "0",
                            "cpu_share_count": "4000",
                            "cpu_share_level": "normal",
                            "custom_attributes.%": "0",
                            "datastore_id": "datastore-13",
                            "disk.#": "1",
                            "disk.0.attach": "false",
                            "disk.0.datastore_id": "datastore-13",
                            "disk.0.device_address": "scsi:0:0",
                            "disk.0.disk_mode": "persistent",
                            "disk.0.disk_sharing": "sharingNone",
                            "disk.0.eagerly_scrub": "false",
                            "disk.0.io_limit": "-1",
                            "disk.0.io_reservation": "0",
                            "disk.0.io_share_count": "1000",
                            "disk.0.io_share_level": "normal",
                            "disk.0.keep_on_remove": "false",
                            "disk.0.key": "2000",
                            "disk.0.label": "disk0",
                            "disk.0.name": "",
                            "disk.0.path": "compute-2/compute-2.vmdk",
                            "disk.0.size": "60",
                            "disk.0.thin_provisioned": "false",
                            "disk.0.unit_number": "0",
                            "disk.0.uuid": "6000C290-e662-440b-030b-9387f4699f14",
                            "disk.0.write_through": "false",
                            "efi_secure_boot_enabled": "false",
                            "enable_disk_uuid": "true",
                            "enable_logging": "false",
                            "ept_rvi_mode": "automatic",
                            "extra_config.%": "2",
                            "extra_config.guestinfo.ignition.config.data": "eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJkYXRhOnRleHQvcGxhaW47Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKcFoyNXBkR2x2YmlJNmV5SmpiMjVtYVdjaU9uc2lZWEJ3Wlc1a0lqcGJleUp6YjNWeVkyVWlPaUpvZEhSd2N6b3ZMMkZ3YVMxcGJuUXVkWEJwTG1VeVpTNWliM011Y21Wa2FHRjBMbU52YlRveU1qWXlNeTlqYjI1bWFXY3ZkMjl5YTJWeUlpd2lkbVZ5YVdacFkyRjBhVzl1SWpwN2ZYMWRmU3dpYzJWamRYSnBkSGtpT25zaWRHeHpJanA3SW1ObGNuUnBabWxqWVhSbFFYVjBhRzl5YVhScFpYTWlPbHQ3SW5OdmRYSmpaU0k2SW1SaGRHRTZkR1Y0ZEM5d2JHRnBianRqYUdGeWMyVjBQWFYwWmkwNE8ySmhjMlUyTkN4TVV6QjBURk14UTFKVlpFcFVhVUpFVWxaS1ZWTlZXa3BSTUVaVlVsTXdkRXhUTUhSRGF6RktVMVZTUmxKRlRrUlJWMXB3V2pCR00xTlZTa0phTUd4S1dUQTVjbUl3VmtkU2F6UXlaREpPTTFKR1JscFRhM1IyVjJ0c2IyUnRUazlSVmtaR1ZFVktVbEZZWkV0aGExWlVWRlZLUWxJd1JYaFdWVlZMVVROb1RsTnRTWHBSYlhocFltczFkbGxXWkdGTlJURlRVVmhrUlZveGJFVldiRVpTVWtWV00xcEliR2xOYW10M1ZFWmtUMkZGTVVOT1JtaEZWa1ZzTTFSVlVrWmtNREUyVTFob1QxSkdiRFpVVkVaMlYwRndSVlpGYXpGVVZsSktaV3N4VlZOWWFFOVNSbXcyVkZSR2RtUXdjSEZTVms1T1VXdEdTRkZVUmxaU1ZVNDBWRlZ3YVUwd1NuTlpiVFZQWWpKR1dGZHFRazVWYTBZelVrZGtXbEpHV2xKVlZWSkdaREpTTlVOdFNYbFBWRUpOVmpBMWIxUlZiRXBSYTJ4eFVWVTFRMW95ZEhoaFIzUndVbnBzTTAxRlNrSlZWVlpIVVZWR1VGRXdSbEpQUlVaT1UxVnNRMUV5WkV4Uk1FWlNVbFZGZDAxdE1WWlJiSEJXWVVWb2NFMVlWVXRSTUdRMllrUlNSVk5IZEhSTGVsWXlUakpLV0dORmQzZE5ia1pXVlVoa2VWWllTVFZaVjFaWldqSndiR1JYVm1oaGF6bE9WMFZHYmxVelpGSmFTSEJZVm0xVmRtVlhNVmxOTWxKVlltNW9TVkZVU1hkV1VYQkxZMWRLTlZkcVZsbGhNR2gyVWpKR2NtTldUbEpVVjBaS1drWktibU5XU25KTmFUaDVWbXhXZDFwVlJtdE5NMnhYVFRBNE5GRnRXbkpYYXpFMFVXcG9hbGxYVW14TWVtTXhVMnRXV1U5VlZUQlZNakZxUTIwNGNrNXJSa2xoVlZwR1lsYzVhVkZ0Vms5T1NFNUdWVVpHUjFwck9XdGtNVXBUVXpOS1ZWWlhVWGRSYmxwcFpVVk9RbUl3VVRSa1IxazBXV3RPVkdJeWRFNVNhbVJUVWpKR2JsWnFRalpUTWxweVRWVlJTMWxVV2pCTlJVcFpVVmh3Ymxkc1RqTlZha0pOWWxVMVFtTkljSGRqVkd4eVUyNU9RMDlVUWxSVVYxbDNWRVZGTWxaR2NIUlVNMWt6Vm0xTmRsZHJSbUZUUlZwRlUxUktWRlJYVFROV01uaEhZV3RzYTJOUmNGRmhSbWd5VFZob2Jrc3dWbGRTZWs0d1VrUkJlRll3T1ZwaVNIQnlUMU56Y21Nd1VsSk9ibVJyWWpCdmVtTjZUbFJPZWxKMFVWUlNVMDlFVVhKaVNGcFdZVzVHVGxOclZrSlBSV1JYWlZkR1dsbHVTVEZEYlUxMldtcENSR1F4YUhsbFdHUktVa1ZHVWxGVlNuWk5SV3d6VlZWU1FsUXdTbTVVYkZwSlZWUm9RMUZYV1RSU1ZVcENWRlZPUW1OV1JqTlNTR1JhVWtaYVUwMUdVa0pWVldkMlVXdEdWbVF3UmpOU1ZVbExURE53UWxwRlNtNVViRnBKVlZSU1JsSnRaRkpXVjNkNVpHdHdjRk5FYkdoVVJuQk5UbXBzZFdWR2JGSlRNREZDVFVSYVdrMHdlRmxoTTJSRlZWWnNTMU15T1dGVFYyZ3lXVEExUWxWVlZrMVJiRVpDVWtGd2Jsb3dWa05SVlRFMVRIcEdTRkp0Vm5aYWExcHlWSHBhYUdWV2JFNVZNREZLWVVWYVdXVnRaRWxQV0ZaVlZGUkdkVTVFVWpGWGFsSlRVVlJDUlZOdVVsUmpSVVpHVjJ0NGRsWlZhRVpqUnpGMFVqTndNME5zYkVaa1ZXZ3dZbTFTV1U1V2FGWlZiVkpOVVZoYWFWbHROVmxoTUVaNFdWUkdXbGw1ZEVWa2EwNXlUREJhVVZaVmRFeE1NREI1U3pGUmVGTkdUa3hXVmtsNlVXNUtNbEZ1UW5kYVJXeFJZMjAwTUdNemIwdGtWbHAyU3pCVmVXRlhNVXBXTW1oNldsWkNlVkp0ZEc1a2FrWldXVEJTU1U5RVduZFdRemwxVERCb1VrNVZOVEpXTUhCclpEQnNXVTVWT1VwVFZrWXdVMFpTTkV4NlFUVlpWVFZPV1RGc1YyUXliRWhXVVhCVVducHJORmt4Y0hoWGJFcDFUbTVaY21WRVpIZGtNblJXVDFoT2VWRXdkekJYV0ZKcVZtNVdkVlpWZURCU1dGSlhVMVZhTVZkSVRUSlhhM1JXV1RCUmVGWXhTalJoUlc4d1pWZHdVazVYVWxaT2VYUXhRMnhDV2sxWVZuRmFNVUUxVDFWbmVGa3dlRTVSVmxKYVRrVjRhMVZGTVRKV2VUaDVUMWRaZGxZeFpHdFRWRXBQWXpCV05WSlViRVZrTTAwMFUydFdkbG95Vm5WTldHTnlWbFZTU1dGSVdrVldSa2t3WVhwSlMwMHpTbk5WV0c4MVRtcE9lbUZyVlRWalZUZ3pVVmhDYTFNemJESk9lbVIxVWpJeFVsQlJiM1JNVXpCMFRGVldUMUpEUWtSU1ZrcFZVMVZhU2xFd1JsVlNVekIwVEZNd2RFTm5QVDBpTENKMlpYSnBabWxqWVhScGIyNGlPbnQ5ZlYxOWZTd2lkR2x0Wlc5MWRITWlPbnQ5TENKMlpYSnphVzl1SWpvaU1pNHlMakFpZlN3aWJtVjBkMjl5YTJRaU9udDlMQ0p3WVhOemQyUWlPbnQ5TENKemRHOXlZV2RsSWpwN2ZTd2ljM2x6ZEdWdFpDSTZlMzE5IiwidmVyaWZpY2F0aW9uIjp7fX1dfSwidGltZW91dHMiOnt9LCJ2ZXJzaW9uIjoiMi4xLjAifSwibmV0d29ya2QiOnt9LCJwYXNzd2QiOnt9LCJzdG9yYWdlIjp7ImZpbGVzIjpbeyJmaWxlc3lzdGVtIjoicm9vdCIsImdyb3VwIjp7fSwicGF0aCI6Ii9ldGMvaG9zdG5hbWUiLCJ1c2VyIjp7fSwiY29udGVudHMiOnsic291cmNlIjoiZGF0YTp0ZXh0L3BsYWluO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFkyOXRjSFYwWlMweSIsInZlcmlmaWNhdGlvbiI6e319LCJtb2RlIjo0MjB9LHsiZmlsZXN5c3RlbSI6InJvb3QiLCJncm91cCI6e30sInBhdGgiOiIvZXRjL3N5c2NvbmZpZy9uZXR3b3JrLXNjcmlwdHMvaWZjZmctZW5zMTkyIiwidXNlciI6e30sImNvbnRlbnRzIjp7InNvdXJjZSI6ImRhdGE6dGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxWRmxRUlQxRmRHaGxjbTVsZEFwQ1QwOVVVRkpQVkU4OWJtOXVaUXBPUVUxRlBXVnVjekU1TWdwRVJWWkpRMFU5Wlc1ek1Ua3lDazlPUWs5UFZEMTVaWE1LU1ZCQlJFUlNQVEV3TGpFNUxqRXhOQzR5TkRjS1VGSkZSa2xZUFRJekNrZEJWRVZYUVZrOU1UQXVNVGt1TVRFMUxqSTFOQXBFVDAxQlNVNDlkWEJwTG1VeVpTNWliM011Y21Wa2FHRjBMbU52YlFwRVRsTXhQVEV3TGpFNUxqRTBNeTR5TkRjS1JFNVRNajB4TUM0eE9TNHhORE11TWpRNENnPT0iLCJ2ZXJpZmljYXRpb24iOnt9fSwibW9kZSI6NDIwfV19LCJzeXN0ZW1kIjp7fX0=",
                            "extra_config.guestinfo.ignition.config.data.encoding": "base64",
                            "firmware": "bios",
                            "folder": "upi",
                            "force_power_off": "true",
                            "guest_id": "rhel7_64Guest",
                            "guest_ip_addresses.#": "0",
                            "host_system_id": "host-1718",
                            "hv_mode": "hvAuto",
                            "id": "42036761-3e8f-87ec-ac66-05096c0abb3f",
                            "latency_sensitivity": "normal",
                            "memory": "16384",
                            "memory_hot_add_enabled": "false",
                            "memory_limit": "-1",
                            "memory_reservation": "0",
                            "memory_share_count": "163840",
                            "memory_share_level": "normal",
                            "migrate_wait_timeout": "30",
                            "moid": "vm-1777",
                            "name": "compute-2",
                            "nested_hv_enabled": "false",
                            "network_interface.#": "1",
                            "network_interface.0.adapter_type": "vmxnet3",
                            "network_interface.0.bandwidth_limit": "-1",
                            "network_interface.0.bandwidth_reservation": "0",
                            "network_interface.0.bandwidth_share_count": "50",
                            "network_interface.0.bandwidth_share_level": "normal",
                            "network_interface.0.device_address": "pci:0:7",
                            "network_interface.0.key": "4000",
                            "network_interface.0.mac_address": "00:50:56:83:48:06",
                            "network_interface.0.network_id": "network-16",
                            "network_interface.0.use_static_mac": "false",
                            "num_cores_per_socket": "1",
                            "num_cpus": "4",
                            "reboot_required": "false",
                            "resource_pool_id": "resgroup-1770",
                            "run_tools_scripts_after_power_on": "true",
                            "run_tools_scripts_after_resume": "true",
                            "run_tools_scripts_before_guest_reboot": "false",
                            "run_tools_scripts_before_guest_shutdown": "true",
                            "run_tools_scripts_before_guest_standby": "true",
                            "scsi_bus_sharing": "noSharing",
                            "scsi_controller_count": "1",
                            "scsi_type": "pvscsi",
                            "shutdown_wait_timeout": "3",
                            "swap_placement_policy": "inherit",
                            "sync_time_with_host": "false",
                            "tags.#": "0",
                            "uuid": "42036761-3e8f-87ec-ac66-05096c0abb3f",
                            "vapp_transport.#": "1",
                            "vapp_transport.0": "com.vmware.guestInfo",
                            "vmware_tools_status": "guestToolsNotRunning",
                            "vmx_path": "compute-2/compute-2.vmx",
                            "wait_for_guest_ip_timeout": "0",
                            "wait_for_guest_net_routable": "false",
                            "wait_for_guest_net_timeout": "0"
                        },
                        "meta": {
                            "schema_version": "3"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "control_plane"
            ],
            "outputs": {
                "ip_addresses": {
                    "sensitive": false,
                    "type": "list",
                    "value": [
                        "10.19.114.242",
                        "10.19.114.243",
                        "10.19.114.244"
                    ]
                }
            },
            "resources": {
                "data.ignition_config.ign.0": {
                    "type": "ignition_config",
                    "depends_on": [
                        "data.ignition_file.hostname.*",
                        "data.ignition_file.static_ip.*",
                        "local.ignition_encoded"
                    ],
                    "primary": {
                        "id": "e8918a84ab30a02419593ea6eb58852b1fd5eff224d8df926c56c18baff39738",
                        "attributes": {
                            "append.#": "1",
                            "append.0.source": "data:text/plain;charset=utf-8;base64,eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJodHRwczovL2FwaS1pbnQudXBpLmUyZS5ib3MucmVkaGF0LmNvbToyMjYyMy9jb25maWcvbWFzdGVyIiwidmVyaWZpY2F0aW9uIjp7fX1dfSwic2VjdXJpdHkiOnsidGxzIjp7ImNlcnRpZmljYXRlQXV0aG9yaXRpZXMiOlt7InNvdXJjZSI6ImRhdGE6dGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRlJFTkRRV1pwWjBGM1NVSkJaMGxKWTA5cmIwVkdSazQyZDJOM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVsM1RVUkZkMDE2U1hoT1JGbDZUVEZ2V0FwRVZFazFUVlJKZWsxVVNYaE9SRmw2VFRGdmQwcHFSVk5OUWtGSFFURlZSVU40VFVwaU0wSnNZbTVPYjJGWFdqQk5Va0YzUkdkWlJGWlJVVVJGZDJSNUNtSXlPVEJNVjA1b1RVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVFd01tMVZRbHBWYUVocE1YVUtRMGQ2YkRSRVNHdHRLelYyTjJKWGNFd3dNbkZWVUhkeVZYSTVZV1ZZWjJwbGRXVmhhazlOV0VGblUzZFJaSHBYVm1VdmVXMVlNMlJVYm5oSVFUSXdWUXBLY1dKNVdqVllhMGh2UjJGcmNWTlJUV0ZKWkZKbmNWSnJNaTh5VmxWd1pVRmtNM2xXTTA4NFFtWnJXazE0UWpoallXUmxMemMxU2tWWU9VVTBVMjFqQ204ck5rRklhVVpGYlc5aVFtVk9OSE5GVUZGR1prOWtkMUpTUzNKVVZXUXdRblppZUVOQmIwUTRkR1k0WWtOVGIydE5SamRTUjJGblZqQjZTMlpyTVVRS1lUWjBNRUpZUVhwbldsTjNVakJNYlU1QmNIcHdjVGxyU25OQ09UQlRUV1l3VEVFMlZGcHRUM1kzVm1NdldrRmFTRVpFU1RKVFRXTTNWMnhHYWtsa2NRcFFhRmgyTVhobkswVldSek4wUkRBeFYwOVpiSHByT1NzcmMwUlJObmRrYjBvemN6TlROelJ0UVRSU09EUXJiSFpWYW5GTlNrVkJPRWRXZVdGWlluSTFDbU12WmpCRGQxaHllWGRKUkVGUlFVSnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSVUpCVFVOQmNWRjNSSGRaUkZaU01GUkJVVWd2UWtGVmQwRjNSVUlLTDNwQlpFSm5UbFpJVVRSRlJtZFJWV3d5ZGtwcFNEbGhURnBNTmpsdWVGbFJTMDFCTURaWk0weFlhM2RFVVZsS1MyOWFTV2gyWTA1QlVVVk1RbEZCUkFwblowVkNRVTE1THpGSFJtVnZaa1pyVHpaaGVWbE5VMDFKYUVaWWVtZElPWFZVVFRGdU5EUjFXalJTUVRCRVNuUlRjRUZGV2t4dlZVaEZjRzF0UjNwM0NsbEZkVWgwYm1SWU5WaFZVbVJNUVhaaVltNVlhMEZ4WVRGWll5dEVka05yTDBaUVZVdExMMDB5SzFReFNGTkxWVkl6UW5KMlFuQndaRWxRY200MGMzb0tkVlp2SzBVeWFXMUpWMmh6WlZCeVJtdG5kakZWWTBSSU9EWndWQzl1TDBoUk5VNTJWMHBrZDBsWU5VOUpTVkYwU0ZSNEx6QTVZVTVOWTFsV2QybEhWUXBUWnprNFkxcHhXbEp1Tm5ZcmVEZHdkMnRWT1hOeVEwdzBXWFJqVm5WdVZVeDBSWFJXU1VaMVdITTJXa3RWWTBReFYxSjRhRW8wZVdwUk5XUlZOeXQxQ2xCWk1YVnFaMUE1T1VneFkweE5RVlJaTkV4a1VFMTJWeTh5T1dZdlYxZGtTVEpPYzBWNVJUbEVkM000U2tWdloyVnVNWGNyVlVSSWFIWkVWRkkwYXpJS00zSnNVWG81TmpOemFrVTVjVTgzUVhCa1MzbDJOemR1UjIxUlBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0iLCJ2ZXJpZmljYXRpb24iOnt9fV19fSwidGltZW91dHMiOnt9LCJ2ZXJzaW9uIjoiMi4yLjAifSwibmV0d29ya2QiOnt9LCJwYXNzd2QiOnt9LCJzdG9yYWdlIjp7fSwic3lzdGVtZCI6e319",
                            "append.0.verification": "",
                            "files.#": "2",
                            "files.0": "15993e847c56ea3a5c0732a5cac8e81241a2da17752a4dca3c03046a185c6625",
                            "files.1": "56d2e7ceeb41c70c6ccb67e62b32cef1ef59fba0e5ff7e65511730dbf93f5fa9",
                            "id": "e8918a84ab30a02419593ea6eb58852b1fd5eff224d8df926c56c18baff39738",
                            "rendered": "{\"ignition\":{\"config\":{\"append\":[{\"source\":\"data:text/plain;charset=utf-8;base64,eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJodHRwczovL2FwaS1pbnQudXBpLmUyZS5ib3MucmVkaGF0LmNvbToyMjYyMy9jb25maWcvbWFzdGVyIiwidmVyaWZpY2F0aW9uIjp7fX1dfSwic2VjdXJpdHkiOnsidGxzIjp7ImNlcnRpZmljYXRlQXV0aG9yaXRpZXMiOlt7InNvdXJjZSI6ImRhdGE6dGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRlJFTkRRV1pwWjBGM1NVSkJaMGxKWTA5cmIwVkdSazQyZDJOM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVsM1RVUkZkMDE2U1hoT1JGbDZUVEZ2V0FwRVZFazFUVlJKZWsxVVNYaE9SRmw2VFRGdmQwcHFSVk5OUWtGSFFURlZSVU40VFVwaU0wSnNZbTVPYjJGWFdqQk5Va0YzUkdkWlJGWlJVVVJGZDJSNUNtSXlPVEJNVjA1b1RVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVFd01tMVZRbHBWYUVocE1YVUtRMGQ2YkRSRVNHdHRLelYyTjJKWGNFd3dNbkZWVUhkeVZYSTVZV1ZZWjJwbGRXVmhhazlOV0VGblUzZFJaSHBYVm1VdmVXMVlNMlJVYm5oSVFUSXdWUXBLY1dKNVdqVllhMGh2UjJGcmNWTlJUV0ZKWkZKbmNWSnJNaTh5VmxWd1pVRmtNM2xXTTA4NFFtWnJXazE0UWpoallXUmxMemMxU2tWWU9VVTBVMjFqQ204ck5rRklhVVpGYlc5aVFtVk9OSE5GVUZGR1prOWtkMUpTUzNKVVZXUXdRblppZUVOQmIwUTRkR1k0WWtOVGIydE5SamRTUjJGblZqQjZTMlpyTVVRS1lUWjBNRUpZUVhwbldsTjNVakJNYlU1QmNIcHdjVGxyU25OQ09UQlRUV1l3VEVFMlZGcHRUM1kzVm1NdldrRmFTRVpFU1RKVFRXTTNWMnhHYWtsa2NRcFFhRmgyTVhobkswVldSek4wUkRBeFYwOVpiSHByT1NzcmMwUlJObmRrYjBvemN6TlROelJ0UVRSU09EUXJiSFpWYW5GTlNrVkJPRWRXZVdGWlluSTFDbU12WmpCRGQxaHllWGRKUkVGUlFVSnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSVUpCVFVOQmNWRjNSSGRaUkZaU01GUkJVVWd2UWtGVmQwRjNSVUlLTDNwQlpFSm5UbFpJVVRSRlJtZFJWV3d5ZGtwcFNEbGhURnBNTmpsdWVGbFJTMDFCTURaWk0weFlhM2RFVVZsS1MyOWFTV2gyWTA1QlVVVk1RbEZCUkFwblowVkNRVTE1THpGSFJtVnZaa1pyVHpaaGVWbE5VMDFKYUVaWWVtZElPWFZVVFRGdU5EUjFXalJTUVRCRVNuUlRjRUZGV2t4dlZVaEZjRzF0UjNwM0NsbEZkVWgwYm1SWU5WaFZVbVJNUVhaaVltNVlhMEZ4WVRGWll5dEVka05yTDBaUVZVdExMMDB5SzFReFNGTkxWVkl6UW5KMlFuQndaRWxRY200MGMzb0tkVlp2SzBVeWFXMUpWMmh6WlZCeVJtdG5kakZWWTBSSU9EWndWQzl1TDBoUk5VNTJWMHBrZDBsWU5VOUpTVkYwU0ZSNEx6QTVZVTVOWTFsV2QybEhWUXBUWnprNFkxcHhXbEp1Tm5ZcmVEZHdkMnRWT1hOeVEwdzBXWFJqVm5WdVZVeDBSWFJXU1VaMVdITTJXa3RWWTBReFYxSjRhRW8wZVdwUk5XUlZOeXQxQ2xCWk1YVnFaMUE1T1VneFkweE5RVlJaTkV4a1VFMTJWeTh5T1dZdlYxZGtTVEpPYzBWNVJUbEVkM000U2tWdloyVnVNWGNyVlVSSWFIWkVWRkkwYXpJS00zSnNVWG81TmpOemFrVTVjVTgzUVhCa1MzbDJOemR1UjIxUlBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0iLCJ2ZXJpZmljYXRpb24iOnt9fV19fSwidGltZW91dHMiOnt9LCJ2ZXJzaW9uIjoiMi4yLjAifSwibmV0d29ya2QiOnt9LCJwYXNzd2QiOnt9LCJzdG9yYWdlIjp7fSwic3lzdGVtZCI6e319\",\"verification\":{}}]},\"timeouts\":{},\"version\":\"2.1.0\"},\"networkd\":{},\"passwd\":{},\"storage\":{\"files\":[{\"filesystem\":\"root\",\"group\":{},\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,Y29udHJvbC1wbGFuZS0w\",\"verification\":{}},\"mode\":420},{\"filesystem\":\"root\",\"group\":{},\"path\":\"/etc/sysconfig/network-scripts/ifcfg-ens192\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,VFlQRT1FdGhlcm5ldApCT09UUFJPVE89bm9uZQpOQU1FPWVuczE5MgpERVZJQ0U9ZW5zMTkyCk9OQk9PVD15ZXMKSVBBRERSPTEwLjE5LjExNC4yNDIKUFJFRklYPTIzCkdBVEVXQVk9MTAuMTkuMTE1LjI1NApET01BSU49dXBpLmUyZS5ib3MucmVkaGF0LmNvbQpETlMxPTEwLjE5LjE0My4yNDcKRE5TMj0xMC4xOS4xNDMuMjQ4Cg==\",\"verification\":{}},\"mode\":420}]},\"systemd\":{}}"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.control_plane.provider.ignition"
                },
                "data.ignition_config.ign.1": {
                    "type": "ignition_config",
                    "depends_on": [
                        "data.ignition_file.hostname.*",
                        "data.ignition_file.static_ip.*",
                        "local.ignition_encoded"
                    ],
                    "primary": {
                        "id": "8b81c0afe80b78ab9e41bf40228c95ce7600d9c3660bf1e563e9700dbcbae2da",
                        "attributes": {
                            "append.#": "1",
                            "append.0.source": "data:text/plain;charset=utf-8;base64,eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJodHRwczovL2FwaS1pbnQudXBpLmUyZS5ib3MucmVkaGF0LmNvbToyMjYyMy9jb25maWcvbWFzdGVyIiwidmVyaWZpY2F0aW9uIjp7fX1dfSwic2VjdXJpdHkiOnsidGxzIjp7ImNlcnRpZmljYXRlQXV0aG9yaXRpZXMiOlt7InNvdXJjZSI6ImRhdGE6dGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRlJFTkRRV1pwWjBGM1NVSkJaMGxKWTA5cmIwVkdSazQyZDJOM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVsM1RVUkZkMDE2U1hoT1JGbDZUVEZ2V0FwRVZFazFUVlJKZWsxVVNYaE9SRmw2VFRGdmQwcHFSVk5OUWtGSFFURlZSVU40VFVwaU0wSnNZbTVPYjJGWFdqQk5Va0YzUkdkWlJGWlJVVVJGZDJSNUNtSXlPVEJNVjA1b1RVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVFd01tMVZRbHBWYUVocE1YVUtRMGQ2YkRSRVNHdHRLelYyTjJKWGNFd3dNbkZWVUhkeVZYSTVZV1ZZWjJwbGRXVmhhazlOV0VGblUzZFJaSHBYVm1VdmVXMVlNMlJVYm5oSVFUSXdWUXBLY1dKNVdqVllhMGh2UjJGcmNWTlJUV0ZKWkZKbmNWSnJNaTh5VmxWd1pVRmtNM2xXTTA4NFFtWnJXazE0UWpoallXUmxMemMxU2tWWU9VVTBVMjFqQ204ck5rRklhVVpGYlc5aVFtVk9OSE5GVUZGR1prOWtkMUpTUzNKVVZXUXdRblppZUVOQmIwUTRkR1k0WWtOVGIydE5SamRTUjJGblZqQjZTMlpyTVVRS1lUWjBNRUpZUVhwbldsTjNVakJNYlU1QmNIcHdjVGxyU25OQ09UQlRUV1l3VEVFMlZGcHRUM1kzVm1NdldrRmFTRVpFU1RKVFRXTTNWMnhHYWtsa2NRcFFhRmgyTVhobkswVldSek4wUkRBeFYwOVpiSHByT1NzcmMwUlJObmRrYjBvemN6TlROelJ0UVRSU09EUXJiSFpWYW5GTlNrVkJPRWRXZVdGWlluSTFDbU12WmpCRGQxaHllWGRKUkVGUlFVSnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSVUpCVFVOQmNWRjNSSGRaUkZaU01GUkJVVWd2UWtGVmQwRjNSVUlLTDNwQlpFSm5UbFpJVVRSRlJtZFJWV3d5ZGtwcFNEbGhURnBNTmpsdWVGbFJTMDFCTURaWk0weFlhM2RFVVZsS1MyOWFTV2gyWTA1QlVVVk1RbEZCUkFwblowVkNRVTE1THpGSFJtVnZaa1pyVHpaaGVWbE5VMDFKYUVaWWVtZElPWFZVVFRGdU5EUjFXalJTUVRCRVNuUlRjRUZGV2t4dlZVaEZjRzF0UjNwM0NsbEZkVWgwYm1SWU5WaFZVbVJNUVhaaVltNVlhMEZ4WVRGWll5dEVka05yTDBaUVZVdExMMDB5SzFReFNGTkxWVkl6UW5KMlFuQndaRWxRY200MGMzb0tkVlp2SzBVeWFXMUpWMmh6WlZCeVJtdG5kakZWWTBSSU9EWndWQzl1TDBoUk5VNTJWMHBrZDBsWU5VOUpTVkYwU0ZSNEx6QTVZVTVOWTFsV2QybEhWUXBUWnprNFkxcHhXbEp1Tm5ZcmVEZHdkMnRWT1hOeVEwdzBXWFJqVm5WdVZVeDBSWFJXU1VaMVdITTJXa3RWWTBReFYxSjRhRW8wZVdwUk5XUlZOeXQxQ2xCWk1YVnFaMUE1T1VneFkweE5RVlJaTkV4a1VFMTJWeTh5T1dZdlYxZGtTVEpPYzBWNVJUbEVkM000U2tWdloyVnVNWGNyVlVSSWFIWkVWRkkwYXpJS00zSnNVWG81TmpOemFrVTVjVTgzUVhCa1MzbDJOemR1UjIxUlBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0iLCJ2ZXJpZmljYXRpb24iOnt9fV19fSwidGltZW91dHMiOnt9LCJ2ZXJzaW9uIjoiMi4yLjAifSwibmV0d29ya2QiOnt9LCJwYXNzd2QiOnt9LCJzdG9yYWdlIjp7fSwic3lzdGVtZCI6e319",
                            "append.0.verification": "",
                            "files.#": "2",
                            "files.0": "fbe07a03370697fae86ea33632e264340c4c18ade2076e84c08b5ca53fe0b60f",
                            "files.1": "76179a2371d4b879775be2169e2330522120c0e765f1788d958ecef24cb6d94c",
                            "id": "8b81c0afe80b78ab9e41bf40228c95ce7600d9c3660bf1e563e9700dbcbae2da",
                            "rendered": "{\"ignition\":{\"config\":{\"append\":[{\"source\":\"data:text/plain;charset=utf-8;base64,eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJodHRwczovL2FwaS1pbnQudXBpLmUyZS5ib3MucmVkaGF0LmNvbToyMjYyMy9jb25maWcvbWFzdGVyIiwidmVyaWZpY2F0aW9uIjp7fX1dfSwic2VjdXJpdHkiOnsidGxzIjp7ImNlcnRpZmljYXRlQXV0aG9yaXRpZXMiOlt7InNvdXJjZSI6ImRhdGE6dGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRlJFTkRRV1pwWjBGM1NVSkJaMGxKWTA5cmIwVkdSazQyZDJOM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVsM1RVUkZkMDE2U1hoT1JGbDZUVEZ2V0FwRVZFazFUVlJKZWsxVVNYaE9SRmw2VFRGdmQwcHFSVk5OUWtGSFFURlZSVU40VFVwaU0wSnNZbTVPYjJGWFdqQk5Va0YzUkdkWlJGWlJVVVJGZDJSNUNtSXlPVEJNVjA1b1RVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVFd01tMVZRbHBWYUVocE1YVUtRMGQ2YkRSRVNHdHRLelYyTjJKWGNFd3dNbkZWVUhkeVZYSTVZV1ZZWjJwbGRXVmhhazlOV0VGblUzZFJaSHBYVm1VdmVXMVlNMlJVYm5oSVFUSXdWUXBLY1dKNVdqVllhMGh2UjJGcmNWTlJUV0ZKWkZKbmNWSnJNaTh5VmxWd1pVRmtNM2xXTTA4NFFtWnJXazE0UWpoallXUmxMemMxU2tWWU9VVTBVMjFqQ204ck5rRklhVVpGYlc5aVFtVk9OSE5GVUZGR1prOWtkMUpTUzNKVVZXUXdRblppZUVOQmIwUTRkR1k0WWtOVGIydE5SamRTUjJGblZqQjZTMlpyTVVRS1lUWjBNRUpZUVhwbldsTjNVakJNYlU1QmNIcHdjVGxyU25OQ09UQlRUV1l3VEVFMlZGcHRUM1kzVm1NdldrRmFTRVpFU1RKVFRXTTNWMnhHYWtsa2NRcFFhRmgyTVhobkswVldSek4wUkRBeFYwOVpiSHByT1NzcmMwUlJObmRrYjBvemN6TlROelJ0UVRSU09EUXJiSFpWYW5GTlNrVkJPRWRXZVdGWlluSTFDbU12WmpCRGQxaHllWGRKUkVGUlFVSnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSVUpCVFVOQmNWRjNSSGRaUkZaU01GUkJVVWd2UWtGVmQwRjNSVUlLTDNwQlpFSm5UbFpJVVRSRlJtZFJWV3d5ZGtwcFNEbGhURnBNTmpsdWVGbFJTMDFCTURaWk0weFlhM2RFVVZsS1MyOWFTV2gyWTA1QlVVVk1RbEZCUkFwblowVkNRVTE1THpGSFJtVnZaa1pyVHpaaGVWbE5VMDFKYUVaWWVtZElPWFZVVFRGdU5EUjFXalJTUVRCRVNuUlRjRUZGV2t4dlZVaEZjRzF0UjNwM0NsbEZkVWgwYm1SWU5WaFZVbVJNUVhaaVltNVlhMEZ4WVRGWll5dEVka05yTDBaUVZVdExMMDB5SzFReFNGTkxWVkl6UW5KMlFuQndaRWxRY200MGMzb0tkVlp2SzBVeWFXMUpWMmh6WlZCeVJtdG5kakZWWTBSSU9EWndWQzl1TDBoUk5VNTJWMHBrZDBsWU5VOUpTVkYwU0ZSNEx6QTVZVTVOWTFsV2QybEhWUXBUWnprNFkxcHhXbEp1Tm5ZcmVEZHdkMnRWT1hOeVEwdzBXWFJqVm5WdVZVeDBSWFJXU1VaMVdITTJXa3RWWTBReFYxSjRhRW8wZVdwUk5XUlZOeXQxQ2xCWk1YVnFaMUE1T1VneFkweE5RVlJaTkV4a1VFMTJWeTh5T1dZdlYxZGtTVEpPYzBWNVJUbEVkM000U2tWdloyVnVNWGNyVlVSSWFIWkVWRkkwYXpJS00zSnNVWG81TmpOemFrVTVjVTgzUVhCa1MzbDJOemR1UjIxUlBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0iLCJ2ZXJpZmljYXRpb24iOnt9fV19fSwidGltZW91dHMiOnt9LCJ2ZXJzaW9uIjoiMi4yLjAifSwibmV0d29ya2QiOnt9LCJwYXNzd2QiOnt9LCJzdG9yYWdlIjp7fSwic3lzdGVtZCI6e319\",\"verification\":{}}]},\"timeouts\":{},\"version\":\"2.1.0\"},\"networkd\":{},\"passwd\":{},\"storage\":{\"files\":[{\"filesystem\":\"root\",\"group\":{},\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,Y29udHJvbC1wbGFuZS0x\",\"verification\":{}},\"mode\":420},{\"filesystem\":\"root\",\"group\":{},\"path\":\"/etc/sysconfig/network-scripts/ifcfg-ens192\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,VFlQRT1FdGhlcm5ldApCT09UUFJPVE89bm9uZQpOQU1FPWVuczE5MgpERVZJQ0U9ZW5zMTkyCk9OQk9PVD15ZXMKSVBBRERSPTEwLjE5LjExNC4yNDMKUFJFRklYPTIzCkdBVEVXQVk9MTAuMTkuMTE1LjI1NApET01BSU49dXBpLmUyZS5ib3MucmVkaGF0LmNvbQpETlMxPTEwLjE5LjE0My4yNDcKRE5TMj0xMC4xOS4xNDMuMjQ4Cg==\",\"verification\":{}},\"mode\":420}]},\"systemd\":{}}"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.control_plane.provider.ignition"
                },
                "data.ignition_config.ign.2": {
                    "type": "ignition_config",
                    "depends_on": [
                        "data.ignition_file.hostname.*",
                        "data.ignition_file.static_ip.*",
                        "local.ignition_encoded"
                    ],
                    "primary": {
                        "id": "c586e8a168b19c6fa45161a8edea3aabf6033a5177fbfc3e678eae5c6f646bb3",
                        "attributes": {
                            "append.#": "1",
                            "append.0.source": "data:text/plain;charset=utf-8;base64,eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJodHRwczovL2FwaS1pbnQudXBpLmUyZS5ib3MucmVkaGF0LmNvbToyMjYyMy9jb25maWcvbWFzdGVyIiwidmVyaWZpY2F0aW9uIjp7fX1dfSwic2VjdXJpdHkiOnsidGxzIjp7ImNlcnRpZmljYXRlQXV0aG9yaXRpZXMiOlt7InNvdXJjZSI6ImRhdGE6dGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRlJFTkRRV1pwWjBGM1NVSkJaMGxKWTA5cmIwVkdSazQyZDJOM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVsM1RVUkZkMDE2U1hoT1JGbDZUVEZ2V0FwRVZFazFUVlJKZWsxVVNYaE9SRmw2VFRGdmQwcHFSVk5OUWtGSFFURlZSVU40VFVwaU0wSnNZbTVPYjJGWFdqQk5Va0YzUkdkWlJGWlJVVVJGZDJSNUNtSXlPVEJNVjA1b1RVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVFd01tMVZRbHBWYUVocE1YVUtRMGQ2YkRSRVNHdHRLelYyTjJKWGNFd3dNbkZWVUhkeVZYSTVZV1ZZWjJwbGRXVmhhazlOV0VGblUzZFJaSHBYVm1VdmVXMVlNMlJVYm5oSVFUSXdWUXBLY1dKNVdqVllhMGh2UjJGcmNWTlJUV0ZKWkZKbmNWSnJNaTh5VmxWd1pVRmtNM2xXTTA4NFFtWnJXazE0UWpoallXUmxMemMxU2tWWU9VVTBVMjFqQ204ck5rRklhVVpGYlc5aVFtVk9OSE5GVUZGR1prOWtkMUpTUzNKVVZXUXdRblppZUVOQmIwUTRkR1k0WWtOVGIydE5SamRTUjJGblZqQjZTMlpyTVVRS1lUWjBNRUpZUVhwbldsTjNVakJNYlU1QmNIcHdjVGxyU25OQ09UQlRUV1l3VEVFMlZGcHRUM1kzVm1NdldrRmFTRVpFU1RKVFRXTTNWMnhHYWtsa2NRcFFhRmgyTVhobkswVldSek4wUkRBeFYwOVpiSHByT1NzcmMwUlJObmRrYjBvemN6TlROelJ0UVRSU09EUXJiSFpWYW5GTlNrVkJPRWRXZVdGWlluSTFDbU12WmpCRGQxaHllWGRKUkVGUlFVSnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSVUpCVFVOQmNWRjNSSGRaUkZaU01GUkJVVWd2UWtGVmQwRjNSVUlLTDNwQlpFSm5UbFpJVVRSRlJtZFJWV3d5ZGtwcFNEbGhURnBNTmpsdWVGbFJTMDFCTURaWk0weFlhM2RFVVZsS1MyOWFTV2gyWTA1QlVVVk1RbEZCUkFwblowVkNRVTE1THpGSFJtVnZaa1pyVHpaaGVWbE5VMDFKYUVaWWVtZElPWFZVVFRGdU5EUjFXalJTUVRCRVNuUlRjRUZGV2t4dlZVaEZjRzF0UjNwM0NsbEZkVWgwYm1SWU5WaFZVbVJNUVhaaVltNVlhMEZ4WVRGWll5dEVka05yTDBaUVZVdExMMDB5SzFReFNGTkxWVkl6UW5KMlFuQndaRWxRY200MGMzb0tkVlp2SzBVeWFXMUpWMmh6WlZCeVJtdG5kakZWWTBSSU9EWndWQzl1TDBoUk5VNTJWMHBrZDBsWU5VOUpTVkYwU0ZSNEx6QTVZVTVOWTFsV2QybEhWUXBUWnprNFkxcHhXbEp1Tm5ZcmVEZHdkMnRWT1hOeVEwdzBXWFJqVm5WdVZVeDBSWFJXU1VaMVdITTJXa3RWWTBReFYxSjRhRW8wZVdwUk5XUlZOeXQxQ2xCWk1YVnFaMUE1T1VneFkweE5RVlJaTkV4a1VFMTJWeTh5T1dZdlYxZGtTVEpPYzBWNVJUbEVkM000U2tWdloyVnVNWGNyVlVSSWFIWkVWRkkwYXpJS00zSnNVWG81TmpOemFrVTVjVTgzUVhCa1MzbDJOemR1UjIxUlBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0iLCJ2ZXJpZmljYXRpb24iOnt9fV19fSwidGltZW91dHMiOnt9LCJ2ZXJzaW9uIjoiMi4yLjAifSwibmV0d29ya2QiOnt9LCJwYXNzd2QiOnt9LCJzdG9yYWdlIjp7fSwic3lzdGVtZCI6e319",
                            "append.0.verification": "",
                            "files.#": "2",
                            "files.0": "3b9c5fd6b2d6a083838a963ebb8fa9d26f0f2e60275db378224df1fad3b6add2",
                            "files.1": "1457df47d1ca202ec11f8b734c771555bdcb020dfe2b12a8fdee9eb1e12c4b51",
                            "id": "c586e8a168b19c6fa45161a8edea3aabf6033a5177fbfc3e678eae5c6f646bb3",
                            "rendered": "{\"ignition\":{\"config\":{\"append\":[{\"source\":\"data:text/plain;charset=utf-8;base64,eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJodHRwczovL2FwaS1pbnQudXBpLmUyZS5ib3MucmVkaGF0LmNvbToyMjYyMy9jb25maWcvbWFzdGVyIiwidmVyaWZpY2F0aW9uIjp7fX1dfSwic2VjdXJpdHkiOnsidGxzIjp7ImNlcnRpZmljYXRlQXV0aG9yaXRpZXMiOlt7InNvdXJjZSI6ImRhdGE6dGV4dC9wbGFpbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSRlJFTkRRV1pwWjBGM1NVSkJaMGxKWTA5cmIwVkdSazQyZDJOM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVsM1RVUkZkMDE2U1hoT1JGbDZUVEZ2V0FwRVZFazFUVlJKZWsxVVNYaE9SRmw2VFRGdmQwcHFSVk5OUWtGSFFURlZSVU40VFVwaU0wSnNZbTVPYjJGWFdqQk5Va0YzUkdkWlJGWlJVVVJGZDJSNUNtSXlPVEJNVjA1b1RVbEpRa2xxUVU1Q1oydHhhR3RwUnpsM01FSkJVVVZHUVVGUFEwRlJPRUZOU1VsQ1EyZExRMEZSUlVFd01tMVZRbHBWYUVocE1YVUtRMGQ2YkRSRVNHdHRLelYyTjJKWGNFd3dNbkZWVUhkeVZYSTVZV1ZZWjJwbGRXVmhhazlOV0VGblUzZFJaSHBYVm1VdmVXMVlNMlJVYm5oSVFUSXdWUXBLY1dKNVdqVllhMGh2UjJGcmNWTlJUV0ZKWkZKbmNWSnJNaTh5VmxWd1pVRmtNM2xXTTA4NFFtWnJXazE0UWpoallXUmxMemMxU2tWWU9VVTBVMjFqQ204ck5rRklhVVpGYlc5aVFtVk9OSE5GVUZGR1prOWtkMUpTUzNKVVZXUXdRblppZUVOQmIwUTRkR1k0WWtOVGIydE5SamRTUjJGblZqQjZTMlpyTVVRS1lUWjBNRUpZUVhwbldsTjNVakJNYlU1QmNIcHdjVGxyU25OQ09UQlRUV1l3VEVFMlZGcHRUM1kzVm1NdldrRmFTRVpFU1RKVFRXTTNWMnhHYWtsa2NRcFFhRmgyTVhobkswVldSek4wUkRBeFYwOVpiSHByT1NzcmMwUlJObmRrYjBvemN6TlROelJ0UVRSU09EUXJiSFpWYW5GTlNrVkJPRWRXZVdGWlluSTFDbU12WmpCRGQxaHllWGRKUkVGUlFVSnZNRWwzVVVSQlQwSm5UbFpJVVRoQ1FXWTRSVUpCVFVOQmNWRjNSSGRaUkZaU01GUkJVVWd2UWtGVmQwRjNSVUlLTDNwQlpFSm5UbFpJVVRSRlJtZFJWV3d5ZGtwcFNEbGhURnBNTmpsdWVGbFJTMDFCTURaWk0weFlhM2RFVVZsS1MyOWFTV2gyWTA1QlVVVk1RbEZCUkFwblowVkNRVTE1THpGSFJtVnZaa1pyVHpaaGVWbE5VMDFKYUVaWWVtZElPWFZVVFRGdU5EUjFXalJTUVRCRVNuUlRjRUZGV2t4dlZVaEZjRzF0UjNwM0NsbEZkVWgwYm1SWU5WaFZVbVJNUVhaaVltNVlhMEZ4WVRGWll5dEVka05yTDBaUVZVdExMMDB5SzFReFNGTkxWVkl6UW5KMlFuQndaRWxRY200MGMzb0tkVlp2SzBVeWFXMUpWMmh6WlZCeVJtdG5kakZWWTBSSU9EWndWQzl1TDBoUk5VNTJWMHBrZDBsWU5VOUpTVkYwU0ZSNEx6QTVZVTVOWTFsV2QybEhWUXBUWnprNFkxcHhXbEp1Tm5ZcmVEZHdkMnRWT1hOeVEwdzBXWFJqVm5WdVZVeDBSWFJXU1VaMVdITTJXa3RWWTBReFYxSjRhRW8wZVdwUk5XUlZOeXQxQ2xCWk1YVnFaMUE1T1VneFkweE5RVlJaTkV4a1VFMTJWeTh5T1dZdlYxZGtTVEpPYzBWNVJUbEVkM000U2tWdloyVnVNWGNyVlVSSWFIWkVWRkkwYXpJS00zSnNVWG81TmpOemFrVTVjVTgzUVhCa1MzbDJOemR1UjIxUlBRb3RMUzB0TFVWT1JDQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENnPT0iLCJ2ZXJpZmljYXRpb24iOnt9fV19fSwidGltZW91dHMiOnt9LCJ2ZXJzaW9uIjoiMi4yLjAifSwibmV0d29ya2QiOnt9LCJwYXNzd2QiOnt9LCJzdG9yYWdlIjp7fSwic3lzdGVtZCI6e319\",\"verification\":{}}]},\"timeouts\":{},\"version\":\"2.1.0\"},\"networkd\":{},\"passwd\":{},\"storage\":{\"files\":[{\"filesystem\":\"root\",\"group\":{},\"path\":\"/etc/hostname\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,Y29udHJvbC1wbGFuZS0y\",\"verification\":{}},\"mode\":420},{\"filesystem\":\"root\",\"group\":{},\"path\":\"/etc/sysconfig/network-scripts/ifcfg-ens192\",\"user\":{},\"contents\":{\"source\":\"data:text/plain;charset=utf-8;base64,VFlQRT1FdGhlcm5ldApCT09UUFJPVE89bm9uZQpOQU1FPWVuczE5MgpERVZJQ0U9ZW5zMTkyCk9OQk9PVD15ZXMKSVBBRERSPTEwLjE5LjExNC4yNDQKUFJFRklYPTIzCkdBVEVXQVk9MTAuMTkuMTE1LjI1NApET01BSU49dXBpLmUyZS5ib3MucmVkaGF0LmNvbQpETlMxPTEwLjE5LjE0My4yNDcKRE5TMj0xMC4xOS4xNDMuMjQ4Cg==\",\"verification\":{}},\"mode\":420}]},\"systemd\":{}}"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.control_plane.provider.ignition"
                },
                "data.ignition_file.hostname.0": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "15993e847c56ea3a5c0732a5cac8e81241a2da17752a4dca3c03046a185c6625",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "control-plane-0",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "15993e847c56ea3a5c0732a5cac8e81241a2da17752a4dca3c03046a185c6625",
                            "mode": "420",
                            "path": "/etc/hostname"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.control_plane.provider.ignition"
                },
                "data.ignition_file.hostname.1": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "fbe07a03370697fae86ea33632e264340c4c18ade2076e84c08b5ca53fe0b60f",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "control-plane-1",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "fbe07a03370697fae86ea33632e264340c4c18ade2076e84c08b5ca53fe0b60f",
                            "mode": "420",
                            "path": "/etc/hostname"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.control_plane.provider.ignition"
                },
                "data.ignition_file.hostname.2": {
                    "type": "ignition_file",
                    "depends_on": [],
                    "primary": {
                        "id": "3b9c5fd6b2d6a083838a963ebb8fa9d26f0f2e60275db378224df1fad3b6add2",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "control-plane-2",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "3b9c5fd6b2d6a083838a963ebb8fa9d26f0f2e60275db378224df1fad3b6add2",
                            "mode": "420",
                            "path": "/etc/hostname"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.control_plane.provider.ignition"
                },
                "data.ignition_file.static_ip.0": {
                    "type": "ignition_file",
                    "depends_on": [
                        "local.gw",
                        "local.ip_addresses",
                        "local.mask"
                    ],
                    "primary": {
                        "id": "56d2e7ceeb41c70c6ccb67e62b32cef1ef59fba0e5ff7e65511730dbf93f5fa9",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "TYPE=Ethernet\nBOOTPROTO=none\nNAME=ens192\nDEVICE=ens192\nONBOOT=yes\nIPADDR=10.19.114.242\nPREFIX=23\nGATEWAY=10.19.115.254\nDOMAIN=upi.e2e.bos.redhat.com\nDNS1=10.19.143.247\nDNS2=10.19.143.248\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "56d2e7ceeb41c70c6ccb67e62b32cef1ef59fba0e5ff7e65511730dbf93f5fa9",
                            "mode": "420",
                            "path": "/etc/sysconfig/network-scripts/ifcfg-ens192"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.control_plane.provider.ignition"
                },
                "data.ignition_file.static_ip.1": {
                    "type": "ignition_file",
                    "depends_on": [
                        "local.gw",
                        "local.ip_addresses",
                        "local.mask"
                    ],
                    "primary": {
                        "id": "76179a2371d4b879775be2169e2330522120c0e765f1788d958ecef24cb6d94c",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "TYPE=Ethernet\nBOOTPROTO=none\nNAME=ens192\nDEVICE=ens192\nONBOOT=yes\nIPADDR=10.19.114.243\nPREFIX=23\nGATEWAY=10.19.115.254\nDOMAIN=upi.e2e.bos.redhat.com\nDNS1=10.19.143.247\nDNS2=10.19.143.248\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "76179a2371d4b879775be2169e2330522120c0e765f1788d958ecef24cb6d94c",
                            "mode": "420",
                            "path": "/etc/sysconfig/network-scripts/ifcfg-ens192"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.control_plane.provider.ignition"
                },
                "data.ignition_file.static_ip.2": {
                    "type": "ignition_file",
                    "depends_on": [
                        "local.gw",
                        "local.ip_addresses",
                        "local.mask"
                    ],
                    "primary": {
                        "id": "1457df47d1ca202ec11f8b734c771555bdcb020dfe2b12a8fdee9eb1e12c4b51",
                        "attributes": {
                            "content.#": "1",
                            "content.0.content": "TYPE=Ethernet\nBOOTPROTO=none\nNAME=ens192\nDEVICE=ens192\nONBOOT=yes\nIPADDR=10.19.114.244\nPREFIX=23\nGATEWAY=10.19.115.254\nDOMAIN=upi.e2e.bos.redhat.com\nDNS1=10.19.143.247\nDNS2=10.19.143.248\n",
                            "content.0.mime": "text/plain",
                            "filesystem": "root",
                            "id": "1457df47d1ca202ec11f8b734c771555bdcb020dfe2b12a8fdee9eb1e12c4b51",
                            "mode": "420",
                            "path": "/etc/sysconfig/network-scripts/ifcfg-ens192"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "module.control_plane.provider.ignition"
                },
                "data.vsphere_datastore.datastore": {
                    "type": "vsphere_datastore",
                    "depends_on": [],
                    "primary": {
                        "id": "datastore-13",
                        "attributes": {
                            "datacenter_id": "datacenter-2",
                            "id": "datastore-13",
                            "name": "ose3-vmware"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "data.vsphere_network.network": {
                    "type": "vsphere_network",
                    "depends_on": [],
                    "primary": {
                        "id": "network-16",
                        "attributes": {
                            "datacenter_id": "datacenter-2",
                            "id": "network-16",
                            "name": "VM Network",
                            "type": "Network"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "data.vsphere_virtual_machine.template": {
                    "type": "vsphere_virtual_machine",
                    "depends_on": [],
                    "primary": {
                        "id": "42037b07-0bc5-9302-d9d4-4cc7c682a2ab",
                        "attributes": {
                            "alternate_guest_name": "",
                            "datacenter_id": "datacenter-2",
                            "disks.#": "1",
                            "disks.0.eagerly_scrub": "false",
                            "disks.0.size": "16",
                            "disks.0.thin_provisioned": "false",
                            "firmware": "bios",
                            "guest_id": "rhel7_64Guest",
                            "id": "42037b07-0bc5-9302-d9d4-4cc7c682a2ab",
                            "name": "rhcos-4.2.0-x86_64-vmware",
                            "network_interface_types.#": "1",
                            "network_interface_types.0": "vmxnet3",
                            "scsi_bus_sharing": "noSharing",
                            "scsi_controller_scan_count": "1",
                            "scsi_type": "pvscsi"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "vsphere_virtual_machine.vm.0": {
                    "type": "vsphere_virtual_machine",
                    "depends_on": [
                        "data.ignition_config.ign.*",
                        "data.vsphere_datastore.datastore",
                        "data.vsphere_network.network",
                        "data.vsphere_virtual_machine.template"
                    ],
                    "primary": {
                        "id": "42036626-537d-38ad-2935-6a6efbe100e2",
                        "attributes": {
                            "alternate_guest_name": "",
                            "annotation": "",
                            "boot_delay": "0",
                            "boot_retry_delay": "10000",
                            "boot_retry_enabled": "false",
                            "cdrom.#": "0",
                            "change_version": "2020-01-03T21:49:10.312577Z",
                            "clone.#": "1",
                            "clone.0.customize.#": "0",
                            "clone.0.linked_clone": "false",
                            "clone.0.template_uuid": "42037b07-0bc5-9302-d9d4-4cc7c682a2ab",
                            "clone.0.timeout": "30",
                            "cpu_hot_add_enabled": "false",
                            "cpu_hot_remove_enabled": "false",
                            "cpu_limit": "-1",
                            "cpu_performance_counters_enabled": "false",
                            "cpu_reservation": "0",
                            "cpu_share_count": "4000",
                            "cpu_share_level": "normal",
                            "custom_attributes.%": "0",
                            "datastore_id": "datastore-13",
                            "disk.#": "1",
                            "disk.0.attach": "false",
                            "disk.0.datastore_id": "datastore-13",
                            "disk.0.device_address": "scsi:0:0",
                            "disk.0.disk_mode": "persistent",
                            "disk.0.disk_sharing": "sharingNone",
                            "disk.0.eagerly_scrub": "false",
                            "disk.0.io_limit": "-1",
                            "disk.0.io_reservation": "0",
                            "disk.0.io_share_count": "1000",
                            "disk.0.io_share_level": "normal",
                            "disk.0.keep_on_remove": "false",
                            "disk.0.key": "2000",
                            "disk.0.label": "disk0",
                            "disk.0.name": "",
                            "disk.0.path": "control-plane-0/control-plane-0.vmdk",
                            "disk.0.size": "60",
                            "disk.0.thin_provisioned": "false",
                            "disk.0.unit_number": "0",
                            "disk.0.uuid": "6000C29d-9476-b406-61b5-7b90a01adb2a",
                            "disk.0.write_through": "false",
                            "efi_secure_boot_enabled": "false",
                            "enable_disk_uuid": "true",
                            "enable_logging": "false",
                            "ept_rvi_mode": "automatic",
                            "extra_config.%": "2",
                            "extra_config.guestinfo.ignition.config.data": "eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJkYXRhOnRleHQvcGxhaW47Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKcFoyNXBkR2x2YmlJNmV5SmpiMjVtYVdjaU9uc2lZWEJ3Wlc1a0lqcGJleUp6YjNWeVkyVWlPaUpvZEhSd2N6b3ZMMkZ3YVMxcGJuUXVkWEJwTG1VeVpTNWliM011Y21Wa2FHRjBMbU52YlRveU1qWXlNeTlqYjI1bWFXY3ZiV0Z6ZEdWeUlpd2lkbVZ5YVdacFkyRjBhVzl1SWpwN2ZYMWRmU3dpYzJWamRYSnBkSGtpT25zaWRHeHpJanA3SW1ObGNuUnBabWxqWVhSbFFYVjBhRzl5YVhScFpYTWlPbHQ3SW5OdmRYSmpaU0k2SW1SaGRHRTZkR1Y0ZEM5d2JHRnBianRqYUdGeWMyVjBQWFYwWmkwNE8ySmhjMlUyTkN4TVV6QjBURk14UTFKVlpFcFVhVUpFVWxaS1ZWTlZXa3BSTUVaVlVsTXdkRXhUTUhSRGF6RktVMVZTUmxKRlRrUlJWMXB3V2pCR00xTlZTa0phTUd4S1dUQTVjbUl3VmtkU2F6UXlaREpPTTFKR1JscFRhM1IyVjJ0c2IyUnRUazlSVmtaR1ZFVktVbEZZWkV0aGExWlVWRlZLUWxJd1JYaFdWVlZMVVROb1RsTnRTWHBSYlhocFltczFkbGxXWkdGTlJURlRVVmhrUlZveGJFVldiRVpTVWtWV00xcEliR2xOYW10M1ZFWmtUMkZGTVVOT1JtaEZWa1ZzTTFSVlVrWmtNREUyVTFob1QxSkdiRFpVVkVaMlYwRndSVlpGYXpGVVZsSktaV3N4VlZOWWFFOVNSbXcyVkZSR2RtUXdjSEZTVms1T1VXdEdTRkZVUmxaU1ZVNDBWRlZ3YVUwd1NuTlpiVFZQWWpKR1dGZHFRazVWYTBZelVrZGtXbEpHV2xKVlZWSkdaREpTTlVOdFNYbFBWRUpOVmpBMWIxUlZiRXBSYTJ4eFVWVTFRMW95ZEhoaFIzUndVbnBzTTAxRlNrSlZWVlpIVVZWR1VGRXdSbEpQUlVaT1UxVnNRMUV5WkV4Uk1FWlNVbFZGZDAxdE1WWlJiSEJXWVVWb2NFMVlWVXRSTUdRMllrUlNSVk5IZEhSTGVsWXlUakpLV0dORmQzZE5ia1pXVlVoa2VWWllTVFZaVjFaWldqSndiR1JYVm1oaGF6bE9WMFZHYmxVelpGSmFTSEJZVm0xVmRtVlhNVmxOTWxKVlltNW9TVkZVU1hkV1VYQkxZMWRLTlZkcVZsbGhNR2gyVWpKR2NtTldUbEpVVjBaS1drWktibU5XU25KTmFUaDVWbXhXZDFwVlJtdE5NMnhYVFRBNE5GRnRXbkpYYXpFMFVXcG9hbGxYVW14TWVtTXhVMnRXV1U5VlZUQlZNakZxUTIwNGNrNXJSa2xoVlZwR1lsYzVhVkZ0Vms5T1NFNUdWVVpHUjFwck9XdGtNVXBUVXpOS1ZWWlhVWGRSYmxwcFpVVk9RbUl3VVRSa1IxazBXV3RPVkdJeWRFNVNhbVJUVWpKR2JsWnFRalpUTWxweVRWVlJTMWxVV2pCTlJVcFpVVmh3Ymxkc1RqTlZha0pOWWxVMVFtTkljSGRqVkd4eVUyNU9RMDlVUWxSVVYxbDNWRVZGTWxaR2NIUlVNMWt6Vm0xTmRsZHJSbUZUUlZwRlUxUktWRlJYVFROV01uaEhZV3RzYTJOUmNGRmhSbWd5VFZob2Jrc3dWbGRTZWs0d1VrUkJlRll3T1ZwaVNIQnlUMU56Y21Nd1VsSk9ibVJyWWpCdmVtTjZUbFJPZWxKMFVWUlNVMDlFVVhKaVNGcFdZVzVHVGxOclZrSlBSV1JYWlZkR1dsbHVTVEZEYlUxMldtcENSR1F4YUhsbFdHUktVa1ZHVWxGVlNuWk5SV3d6VlZWU1FsUXdTbTVVYkZwSlZWUm9RMUZYV1RSU1ZVcENWRlZPUW1OV1JqTlNTR1JhVWtaYVUwMUdVa0pWVldkMlVXdEdWbVF3UmpOU1ZVbExURE53UWxwRlNtNVViRnBKVlZSU1JsSnRaRkpXVjNkNVpHdHdjRk5FYkdoVVJuQk5UbXBzZFdWR2JGSlRNREZDVFVSYVdrMHdlRmxoTTJSRlZWWnNTMU15T1dGVFYyZ3lXVEExUWxWVlZrMVJiRVpDVWtGd2Jsb3dWa05SVlRFMVRIcEdTRkp0Vm5aYWExcHlWSHBhYUdWV2JFNVZNREZLWVVWYVdXVnRaRWxQV0ZaVlZGUkdkVTVFVWpGWGFsSlRVVlJDUlZOdVVsUmpSVVpHVjJ0NGRsWlZhRVpqUnpGMFVqTndNME5zYkVaa1ZXZ3dZbTFTV1U1V2FGWlZiVkpOVVZoYWFWbHROVmxoTUVaNFdWUkdXbGw1ZEVWa2EwNXlUREJhVVZaVmRFeE1NREI1U3pGUmVGTkdUa3hXVmtsNlVXNUtNbEZ1UW5kYVJXeFJZMjAwTUdNemIwdGtWbHAyU3pCVmVXRlhNVXBXTW1oNldsWkNlVkp0ZEc1a2FrWldXVEJTU1U5RVduZFdRemwxVERCb1VrNVZOVEpXTUhCclpEQnNXVTVWT1VwVFZrWXdVMFpTTkV4NlFUVlpWVFZPV1RGc1YyUXliRWhXVVhCVVducHJORmt4Y0hoWGJFcDFUbTVaY21WRVpIZGtNblJXVDFoT2VWRXdkekJYV0ZKcVZtNVdkVlpWZURCU1dGSlhVMVZhTVZkSVRUSlhhM1JXV1RCUmVGWXhTalJoUlc4d1pWZHdVazVYVWxaT2VYUXhRMnhDV2sxWVZuRmFNVUUxVDFWbmVGa3dlRTVSVmxKYVRrVjRhMVZGTVRKV2VUaDVUMWRaZGxZeFpHdFRWRXBQWXpCV05WSlViRVZrTTAwMFUydFdkbG95Vm5WTldHTnlWbFZTU1dGSVdrVldSa2t3WVhwSlMwMHpTbk5WV0c4MVRtcE9lbUZyVlRWalZUZ3pVVmhDYTFNemJESk9lbVIxVWpJeFVsQlJiM1JNVXpCMFRGVldUMUpEUWtSU1ZrcFZVMVZhU2xFd1JsVlNVekIwVEZNd2RFTm5QVDBpTENKMlpYSnBabWxqWVhScGIyNGlPbnQ5ZlYxOWZTd2lkR2x0Wlc5MWRITWlPbnQ5TENKMlpYSnphVzl1SWpvaU1pNHlMakFpZlN3aWJtVjBkMjl5YTJRaU9udDlMQ0p3WVhOemQyUWlPbnQ5TENKemRHOXlZV2RsSWpwN2ZTd2ljM2x6ZEdWdFpDSTZlMzE5IiwidmVyaWZpY2F0aW9uIjp7fX1dfSwidGltZW91dHMiOnt9LCJ2ZXJzaW9uIjoiMi4xLjAifSwibmV0d29ya2QiOnt9LCJwYXNzd2QiOnt9LCJzdG9yYWdlIjp7ImZpbGVzIjpbeyJmaWxlc3lzdGVtIjoicm9vdCIsImdyb3VwIjp7fSwicGF0aCI6Ii9ldGMvaG9zdG5hbWUiLCJ1c2VyIjp7fSwiY29udGVudHMiOnsic291cmNlIjoiZGF0YTp0ZXh0L3BsYWluO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFkyOXVkSEp2YkMxd2JHRnVaUzB3IiwidmVyaWZpY2F0aW9uIjp7fX0sIm1vZGUiOjQyMH0seyJmaWxlc3lzdGVtIjoicm9vdCIsImdyb3VwIjp7fSwicGF0aCI6Ii9ldGMvc3lzY29uZmlnL25ldHdvcmstc2NyaXB0cy9pZmNmZy1lbnMxOTIiLCJ1c2VyIjp7fSwiY29udGVudHMiOnsic291cmNlIjoiZGF0YTp0ZXh0L3BsYWluO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFZGbFFSVDFGZEdobGNtNWxkQXBDVDA5VVVGSlBWRTg5Ym05dVpRcE9RVTFGUFdWdWN6RTVNZ3BFUlZaSlEwVTlaVzV6TVRreUNrOU9RazlQVkQxNVpYTUtTVkJCUkVSU1BURXdMakU1TGpFeE5DNHlORElLVUZKRlJrbFlQVEl6Q2tkQlZFVlhRVms5TVRBdU1Ua3VNVEUxTGpJMU5BcEVUMDFCU1U0OWRYQnBMbVV5WlM1aWIzTXVjbVZrYUdGMExtTnZiUXBFVGxNeFBURXdMakU1TGpFME15NHlORGNLUkU1VE1qMHhNQzR4T1M0eE5ETXVNalE0Q2c9PSIsInZlcmlmaWNhdGlvbiI6e319LCJtb2RlIjo0MjB9XX0sInN5c3RlbWQiOnt9fQ==",
                            "extra_config.guestinfo.ignition.config.data.encoding": "base64",
                            "firmware": "bios",
                            "folder": "upi",
                            "force_power_off": "true",
                            "guest_id": "rhel7_64Guest",
                            "guest_ip_addresses.#": "0",
                            "host_system_id": "host-1703",
                            "hv_mode": "hvAuto",
                            "id": "42036626-537d-38ad-2935-6a6efbe100e2",
                            "latency_sensitivity": "normal",
                            "memory": "16384",
                            "memory_hot_add_enabled": "false",
                            "memory_limit": "-1",
                            "memory_reservation": "0",
                            "memory_share_count": "163840",
                            "memory_share_level": "normal",
                            "migrate_wait_timeout": "30",
                            "moid": "vm-1773",
                            "name": "control-plane-0",
                            "nested_hv_enabled": "false",
                            "network_interface.#": "1",
                            "network_interface.0.adapter_type": "vmxnet3",
                            "network_interface.0.bandwidth_limit": "-1",
                            "network_interface.0.bandwidth_reservation": "0",
                            "network_interface.0.bandwidth_share_count": "50",
                            "network_interface.0.bandwidth_share_level": "normal",
                            "network_interface.0.device_address": "pci:0:7",
                            "network_interface.0.key": "4000",
                            "network_interface.0.mac_address": "00:50:56:83:77:21",
                            "network_interface.0.network_id": "network-16",
                            "network_interface.0.use_static_mac": "false",
                            "num_cores_per_socket": "1",
                            "num_cpus": "4",
                            "reboot_required": "false",
                            "resource_pool_id": "resgroup-1770",
                            "run_tools_scripts_after_power_on": "true",
                            "run_tools_scripts_after_resume": "true",
                            "run_tools_scripts_before_guest_reboot": "false",
                            "run_tools_scripts_before_guest_shutdown": "true",
                            "run_tools_scripts_before_guest_standby": "true",
                            "scsi_bus_sharing": "noSharing",
                            "scsi_controller_count": "1",
                            "scsi_type": "pvscsi",
                            "shutdown_wait_timeout": "3",
                            "swap_placement_policy": "inherit",
                            "sync_time_with_host": "false",
                            "tags.#": "0",
                            "uuid": "42036626-537d-38ad-2935-6a6efbe100e2",
                            "vapp_transport.#": "1",
                            "vapp_transport.0": "com.vmware.guestInfo",
                            "vmware_tools_status": "guestToolsNotRunning",
                            "vmx_path": "control-plane-0/control-plane-0.vmx",
                            "wait_for_guest_ip_timeout": "0",
                            "wait_for_guest_net_routable": "false",
                            "wait_for_guest_net_timeout": "0"
                        },
                        "meta": {
                            "schema_version": "3"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "vsphere_virtual_machine.vm.1": {
                    "type": "vsphere_virtual_machine",
                    "depends_on": [
                        "data.ignition_config.ign.*",
                        "data.vsphere_datastore.datastore",
                        "data.vsphere_network.network",
                        "data.vsphere_virtual_machine.template"
                    ],
                    "primary": {
                        "id": "42033de3-60ec-66a4-91bc-579b75c63973",
                        "attributes": {
                            "alternate_guest_name": "",
                            "annotation": "",
                            "boot_delay": "0",
                            "boot_retry_delay": "10000",
                            "boot_retry_enabled": "false",
                            "cdrom.#": "0",
                            "change_version": "2020-01-03T21:49:04.030788Z",
                            "clone.#": "1",
                            "clone.0.customize.#": "0",
                            "clone.0.linked_clone": "false",
                            "clone.0.template_uuid": "42037b07-0bc5-9302-d9d4-4cc7c682a2ab",
                            "clone.0.timeout": "30",
                            "cpu_hot_add_enabled": "false",
                            "cpu_hot_remove_enabled": "false",
                            "cpu_limit": "-1",
                            "cpu_performance_counters_enabled": "false",
                            "cpu_reservation": "0",
                            "cpu_share_count": "4000",
                            "cpu_share_level": "normal",
                            "custom_attributes.%": "0",
                            "datastore_id": "datastore-13",
                            "disk.#": "1",
                            "disk.0.attach": "false",
                            "disk.0.datastore_id": "datastore-13",
                            "disk.0.device_address": "scsi:0:0",
                            "disk.0.disk_mode": "persistent",
                            "disk.0.disk_sharing": "sharingNone",
                            "disk.0.eagerly_scrub": "false",
                            "disk.0.io_limit": "-1",
                            "disk.0.io_reservation": "0",
                            "disk.0.io_share_count": "1000",
                            "disk.0.io_share_level": "normal",
                            "disk.0.keep_on_remove": "false",
                            "disk.0.key": "2000",
                            "disk.0.label": "disk0",
                            "disk.0.name": "",
                            "disk.0.path": "control-plane-1/control-plane-1.vmdk",
                            "disk.0.size": "60",
                            "disk.0.thin_provisioned": "false",
                            "disk.0.unit_number": "0",
                            "disk.0.uuid": "6000C296-c1af-2241-e0b4-699503e0f6dd",
                            "disk.0.write_through": "false",
                            "efi_secure_boot_enabled": "false",
                            "enable_disk_uuid": "true",
                            "enable_logging": "false",
                            "ept_rvi_mode": "automatic",
                            "extra_config.%": "2",
                            "extra_config.guestinfo.ignition.config.data": "eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJkYXRhOnRleHQvcGxhaW47Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKcFoyNXBkR2x2YmlJNmV5SmpiMjVtYVdjaU9uc2lZWEJ3Wlc1a0lqcGJleUp6YjNWeVkyVWlPaUpvZEhSd2N6b3ZMMkZ3YVMxcGJuUXVkWEJwTG1VeVpTNWliM011Y21Wa2FHRjBMbU52YlRveU1qWXlNeTlqYjI1bWFXY3ZiV0Z6ZEdWeUlpd2lkbVZ5YVdacFkyRjBhVzl1SWpwN2ZYMWRmU3dpYzJWamRYSnBkSGtpT25zaWRHeHpJanA3SW1ObGNuUnBabWxqWVhSbFFYVjBhRzl5YVhScFpYTWlPbHQ3SW5OdmRYSmpaU0k2SW1SaGRHRTZkR1Y0ZEM5d2JHRnBianRqYUdGeWMyVjBQWFYwWmkwNE8ySmhjMlUyTkN4TVV6QjBURk14UTFKVlpFcFVhVUpFVWxaS1ZWTlZXa3BSTUVaVlVsTXdkRXhUTUhSRGF6RktVMVZTUmxKRlRrUlJWMXB3V2pCR00xTlZTa0phTUd4S1dUQTVjbUl3VmtkU2F6UXlaREpPTTFKR1JscFRhM1IyVjJ0c2IyUnRUazlSVmtaR1ZFVktVbEZZWkV0aGExWlVWRlZLUWxJd1JYaFdWVlZMVVROb1RsTnRTWHBSYlhocFltczFkbGxXWkdGTlJURlRVVmhrUlZveGJFVldiRVpTVWtWV00xcEliR2xOYW10M1ZFWmtUMkZGTVVOT1JtaEZWa1ZzTTFSVlVrWmtNREUyVTFob1QxSkdiRFpVVkVaMlYwRndSVlpGYXpGVVZsSktaV3N4VlZOWWFFOVNSbXcyVkZSR2RtUXdjSEZTVms1T1VXdEdTRkZVUmxaU1ZVNDBWRlZ3YVUwd1NuTlpiVFZQWWpKR1dGZHFRazVWYTBZelVrZGtXbEpHV2xKVlZWSkdaREpTTlVOdFNYbFBWRUpOVmpBMWIxUlZiRXBSYTJ4eFVWVTFRMW95ZEhoaFIzUndVbnBzTTAxRlNrSlZWVlpIVVZWR1VGRXdSbEpQUlVaT1UxVnNRMUV5WkV4Uk1FWlNVbFZGZDAxdE1WWlJiSEJXWVVWb2NFMVlWVXRSTUdRMllrUlNSVk5IZEhSTGVsWXlUakpLV0dORmQzZE5ia1pXVlVoa2VWWllTVFZaVjFaWldqSndiR1JYVm1oaGF6bE9WMFZHYmxVelpGSmFTSEJZVm0xVmRtVlhNVmxOTWxKVlltNW9TVkZVU1hkV1VYQkxZMWRLTlZkcVZsbGhNR2gyVWpKR2NtTldUbEpVVjBaS1drWktibU5XU25KTmFUaDVWbXhXZDFwVlJtdE5NMnhYVFRBNE5GRnRXbkpYYXpFMFVXcG9hbGxYVW14TWVtTXhVMnRXV1U5VlZUQlZNakZxUTIwNGNrNXJSa2xoVlZwR1lsYzVhVkZ0Vms5T1NFNUdWVVpHUjFwck9XdGtNVXBUVXpOS1ZWWlhVWGRSYmxwcFpVVk9RbUl3VVRSa1IxazBXV3RPVkdJeWRFNVNhbVJUVWpKR2JsWnFRalpUTWxweVRWVlJTMWxVV2pCTlJVcFpVVmh3Ymxkc1RqTlZha0pOWWxVMVFtTkljSGRqVkd4eVUyNU9RMDlVUWxSVVYxbDNWRVZGTWxaR2NIUlVNMWt6Vm0xTmRsZHJSbUZUUlZwRlUxUktWRlJYVFROV01uaEhZV3RzYTJOUmNGRmhSbWd5VFZob2Jrc3dWbGRTZWs0d1VrUkJlRll3T1ZwaVNIQnlUMU56Y21Nd1VsSk9ibVJyWWpCdmVtTjZUbFJPZWxKMFVWUlNVMDlFVVhKaVNGcFdZVzVHVGxOclZrSlBSV1JYWlZkR1dsbHVTVEZEYlUxMldtcENSR1F4YUhsbFdHUktVa1ZHVWxGVlNuWk5SV3d6VlZWU1FsUXdTbTVVYkZwSlZWUm9RMUZYV1RSU1ZVcENWRlZPUW1OV1JqTlNTR1JhVWtaYVUwMUdVa0pWVldkMlVXdEdWbVF3UmpOU1ZVbExURE53UWxwRlNtNVViRnBKVlZSU1JsSnRaRkpXVjNkNVpHdHdjRk5FYkdoVVJuQk5UbXBzZFdWR2JGSlRNREZDVFVSYVdrMHdlRmxoTTJSRlZWWnNTMU15T1dGVFYyZ3lXVEExUWxWVlZrMVJiRVpDVWtGd2Jsb3dWa05SVlRFMVRIcEdTRkp0Vm5aYWExcHlWSHBhYUdWV2JFNVZNREZLWVVWYVdXVnRaRWxQV0ZaVlZGUkdkVTVFVWpGWGFsSlRVVlJDUlZOdVVsUmpSVVpHVjJ0NGRsWlZhRVpqUnpGMFVqTndNME5zYkVaa1ZXZ3dZbTFTV1U1V2FGWlZiVkpOVVZoYWFWbHROVmxoTUVaNFdWUkdXbGw1ZEVWa2EwNXlUREJhVVZaVmRFeE1NREI1U3pGUmVGTkdUa3hXVmtsNlVXNUtNbEZ1UW5kYVJXeFJZMjAwTUdNemIwdGtWbHAyU3pCVmVXRlhNVXBXTW1oNldsWkNlVkp0ZEc1a2FrWldXVEJTU1U5RVduZFdRemwxVERCb1VrNVZOVEpXTUhCclpEQnNXVTVWT1VwVFZrWXdVMFpTTkV4NlFUVlpWVFZPV1RGc1YyUXliRWhXVVhCVVducHJORmt4Y0hoWGJFcDFUbTVaY21WRVpIZGtNblJXVDFoT2VWRXdkekJYV0ZKcVZtNVdkVlpWZURCU1dGSlhVMVZhTVZkSVRUSlhhM1JXV1RCUmVGWXhTalJoUlc4d1pWZHdVazVYVWxaT2VYUXhRMnhDV2sxWVZuRmFNVUUxVDFWbmVGa3dlRTVSVmxKYVRrVjRhMVZGTVRKV2VUaDVUMWRaZGxZeFpHdFRWRXBQWXpCV05WSlViRVZrTTAwMFUydFdkbG95Vm5WTldHTnlWbFZTU1dGSVdrVldSa2t3WVhwSlMwMHpTbk5WV0c4MVRtcE9lbUZyVlRWalZUZ3pVVmhDYTFNemJESk9lbVIxVWpJeFVsQlJiM1JNVXpCMFRGVldUMUpEUWtSU1ZrcFZVMVZhU2xFd1JsVlNVekIwVEZNd2RFTm5QVDBpTENKMlpYSnBabWxqWVhScGIyNGlPbnQ5ZlYxOWZTd2lkR2x0Wlc5MWRITWlPbnQ5TENKMlpYSnphVzl1SWpvaU1pNHlMakFpZlN3aWJtVjBkMjl5YTJRaU9udDlMQ0p3WVhOemQyUWlPbnQ5TENKemRHOXlZV2RsSWpwN2ZTd2ljM2x6ZEdWdFpDSTZlMzE5IiwidmVyaWZpY2F0aW9uIjp7fX1dfSwidGltZW91dHMiOnt9LCJ2ZXJzaW9uIjoiMi4xLjAifSwibmV0d29ya2QiOnt9LCJwYXNzd2QiOnt9LCJzdG9yYWdlIjp7ImZpbGVzIjpbeyJmaWxlc3lzdGVtIjoicm9vdCIsImdyb3VwIjp7fSwicGF0aCI6Ii9ldGMvaG9zdG5hbWUiLCJ1c2VyIjp7fSwiY29udGVudHMiOnsic291cmNlIjoiZGF0YTp0ZXh0L3BsYWluO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFkyOXVkSEp2YkMxd2JHRnVaUzB4IiwidmVyaWZpY2F0aW9uIjp7fX0sIm1vZGUiOjQyMH0seyJmaWxlc3lzdGVtIjoicm9vdCIsImdyb3VwIjp7fSwicGF0aCI6Ii9ldGMvc3lzY29uZmlnL25ldHdvcmstc2NyaXB0cy9pZmNmZy1lbnMxOTIiLCJ1c2VyIjp7fSwiY29udGVudHMiOnsic291cmNlIjoiZGF0YTp0ZXh0L3BsYWluO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFZGbFFSVDFGZEdobGNtNWxkQXBDVDA5VVVGSlBWRTg5Ym05dVpRcE9RVTFGUFdWdWN6RTVNZ3BFUlZaSlEwVTlaVzV6TVRreUNrOU9RazlQVkQxNVpYTUtTVkJCUkVSU1BURXdMakU1TGpFeE5DNHlORE1LVUZKRlJrbFlQVEl6Q2tkQlZFVlhRVms5TVRBdU1Ua3VNVEUxTGpJMU5BcEVUMDFCU1U0OWRYQnBMbVV5WlM1aWIzTXVjbVZrYUdGMExtTnZiUXBFVGxNeFBURXdMakU1TGpFME15NHlORGNLUkU1VE1qMHhNQzR4T1M0eE5ETXVNalE0Q2c9PSIsInZlcmlmaWNhdGlvbiI6e319LCJtb2RlIjo0MjB9XX0sInN5c3RlbWQiOnt9fQ==",
                            "extra_config.guestinfo.ignition.config.data.encoding": "base64",
                            "firmware": "bios",
                            "folder": "upi",
                            "force_power_off": "true",
                            "guest_id": "rhel7_64Guest",
                            "guest_ip_addresses.#": "0",
                            "host_system_id": "host-12",
                            "hv_mode": "hvAuto",
                            "id": "42033de3-60ec-66a4-91bc-579b75c63973",
                            "latency_sensitivity": "normal",
                            "memory": "16384",
                            "memory_hot_add_enabled": "false",
                            "memory_limit": "-1",
                            "memory_reservation": "0",
                            "memory_share_count": "163840",
                            "memory_share_level": "normal",
                            "migrate_wait_timeout": "30",
                            "moid": "vm-1771",
                            "name": "control-plane-1",
                            "nested_hv_enabled": "false",
                            "network_interface.#": "1",
                            "network_interface.0.adapter_type": "vmxnet3",
                            "network_interface.0.bandwidth_limit": "-1",
                            "network_interface.0.bandwidth_reservation": "0",
                            "network_interface.0.bandwidth_share_count": "50",
                            "network_interface.0.bandwidth_share_level": "normal",
                            "network_interface.0.device_address": "pci:0:7",
                            "network_interface.0.key": "4000",
                            "network_interface.0.mac_address": "00:50:56:83:0b:63",
                            "network_interface.0.network_id": "network-16",
                            "network_interface.0.use_static_mac": "false",
                            "num_cores_per_socket": "1",
                            "num_cpus": "4",
                            "reboot_required": "false",
                            "resource_pool_id": "resgroup-1770",
                            "run_tools_scripts_after_power_on": "true",
                            "run_tools_scripts_after_resume": "true",
                            "run_tools_scripts_before_guest_reboot": "false",
                            "run_tools_scripts_before_guest_shutdown": "true",
                            "run_tools_scripts_before_guest_standby": "true",
                            "scsi_bus_sharing": "noSharing",
                            "scsi_controller_count": "1",
                            "scsi_type": "pvscsi",
                            "shutdown_wait_timeout": "3",
                            "swap_placement_policy": "inherit",
                            "sync_time_with_host": "false",
                            "tags.#": "0",
                            "uuid": "42033de3-60ec-66a4-91bc-579b75c63973",
                            "vapp_transport.#": "1",
                            "vapp_transport.0": "com.vmware.guestInfo",
                            "vmware_tools_status": "guestToolsNotRunning",
                            "vmx_path": "control-plane-1/control-plane-1.vmx",
                            "wait_for_guest_ip_timeout": "0",
                            "wait_for_guest_net_routable": "false",
                            "wait_for_guest_net_timeout": "0"
                        },
                        "meta": {
                            "schema_version": "3"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "vsphere_virtual_machine.vm.2": {
                    "type": "vsphere_virtual_machine",
                    "depends_on": [
                        "data.ignition_config.ign.*",
                        "data.vsphere_datastore.datastore",
                        "data.vsphere_network.network",
                        "data.vsphere_virtual_machine.template"
                    ],
                    "primary": {
                        "id": "4203e419-02c5-3211-58c9-b0222df3a0ca",
                        "attributes": {
                            "alternate_guest_name": "",
                            "annotation": "",
                            "boot_delay": "0",
                            "boot_retry_delay": "10000",
                            "boot_retry_enabled": "false",
                            "cdrom.#": "0",
                            "change_version": "2020-01-03T21:49:07.453607Z",
                            "clone.#": "1",
                            "clone.0.customize.#": "0",
                            "clone.0.linked_clone": "false",
                            "clone.0.template_uuid": "42037b07-0bc5-9302-d9d4-4cc7c682a2ab",
                            "clone.0.timeout": "30",
                            "cpu_hot_add_enabled": "false",
                            "cpu_hot_remove_enabled": "false",
                            "cpu_limit": "-1",
                            "cpu_performance_counters_enabled": "false",
                            "cpu_reservation": "0",
                            "cpu_share_count": "4000",
                            "cpu_share_level": "normal",
                            "custom_attributes.%": "0",
                            "datastore_id": "datastore-13",
                            "disk.#": "1",
                            "disk.0.attach": "false",
                            "disk.0.datastore_id": "datastore-13",
                            "disk.0.device_address": "scsi:0:0",
                            "disk.0.disk_mode": "persistent",
                            "disk.0.disk_sharing": "sharingNone",
                            "disk.0.eagerly_scrub": "false",
                            "disk.0.io_limit": "-1",
                            "disk.0.io_reservation": "0",
                            "disk.0.io_share_count": "1000",
                            "disk.0.io_share_level": "normal",
                            "disk.0.keep_on_remove": "false",
                            "disk.0.key": "2000",
                            "disk.0.label": "disk0",
                            "disk.0.name": "",
                            "disk.0.path": "control-plane-2/control-plane-2.vmdk",
                            "disk.0.size": "60",
                            "disk.0.thin_provisioned": "false",
                            "disk.0.unit_number": "0",
                            "disk.0.uuid": "6000C29c-3567-2674-d9ad-258571b4411a",
                            "disk.0.write_through": "false",
                            "efi_secure_boot_enabled": "false",
                            "enable_disk_uuid": "true",
                            "enable_logging": "false",
                            "ept_rvi_mode": "automatic",
                            "extra_config.%": "2",
                            "extra_config.guestinfo.ignition.config.data": "eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJkYXRhOnRleHQvcGxhaW47Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKcFoyNXBkR2x2YmlJNmV5SmpiMjVtYVdjaU9uc2lZWEJ3Wlc1a0lqcGJleUp6YjNWeVkyVWlPaUpvZEhSd2N6b3ZMMkZ3YVMxcGJuUXVkWEJwTG1VeVpTNWliM011Y21Wa2FHRjBMbU52YlRveU1qWXlNeTlqYjI1bWFXY3ZiV0Z6ZEdWeUlpd2lkbVZ5YVdacFkyRjBhVzl1SWpwN2ZYMWRmU3dpYzJWamRYSnBkSGtpT25zaWRHeHpJanA3SW1ObGNuUnBabWxqWVhSbFFYVjBhRzl5YVhScFpYTWlPbHQ3SW5OdmRYSmpaU0k2SW1SaGRHRTZkR1Y0ZEM5d2JHRnBianRqYUdGeWMyVjBQWFYwWmkwNE8ySmhjMlUyTkN4TVV6QjBURk14UTFKVlpFcFVhVUpFVWxaS1ZWTlZXa3BSTUVaVlVsTXdkRXhUTUhSRGF6RktVMVZTUmxKRlRrUlJWMXB3V2pCR00xTlZTa0phTUd4S1dUQTVjbUl3VmtkU2F6UXlaREpPTTFKR1JscFRhM1IyVjJ0c2IyUnRUazlSVmtaR1ZFVktVbEZZWkV0aGExWlVWRlZLUWxJd1JYaFdWVlZMVVROb1RsTnRTWHBSYlhocFltczFkbGxXWkdGTlJURlRVVmhrUlZveGJFVldiRVpTVWtWV00xcEliR2xOYW10M1ZFWmtUMkZGTVVOT1JtaEZWa1ZzTTFSVlVrWmtNREUyVTFob1QxSkdiRFpVVkVaMlYwRndSVlpGYXpGVVZsSktaV3N4VlZOWWFFOVNSbXcyVkZSR2RtUXdjSEZTVms1T1VXdEdTRkZVUmxaU1ZVNDBWRlZ3YVUwd1NuTlpiVFZQWWpKR1dGZHFRazVWYTBZelVrZGtXbEpHV2xKVlZWSkdaREpTTlVOdFNYbFBWRUpOVmpBMWIxUlZiRXBSYTJ4eFVWVTFRMW95ZEhoaFIzUndVbnBzTTAxRlNrSlZWVlpIVVZWR1VGRXdSbEpQUlVaT1UxVnNRMUV5WkV4Uk1FWlNVbFZGZDAxdE1WWlJiSEJXWVVWb2NFMVlWVXRSTUdRMllrUlNSVk5IZEhSTGVsWXlUakpLV0dORmQzZE5ia1pXVlVoa2VWWllTVFZaVjFaWldqSndiR1JYVm1oaGF6bE9WMFZHYmxVelpGSmFTSEJZVm0xVmRtVlhNVmxOTWxKVlltNW9TVkZVU1hkV1VYQkxZMWRLTlZkcVZsbGhNR2gyVWpKR2NtTldUbEpVVjBaS1drWktibU5XU25KTmFUaDVWbXhXZDFwVlJtdE5NMnhYVFRBNE5GRnRXbkpYYXpFMFVXcG9hbGxYVW14TWVtTXhVMnRXV1U5VlZUQlZNakZxUTIwNGNrNXJSa2xoVlZwR1lsYzVhVkZ0Vms5T1NFNUdWVVpHUjFwck9XdGtNVXBUVXpOS1ZWWlhVWGRSYmxwcFpVVk9RbUl3VVRSa1IxazBXV3RPVkdJeWRFNVNhbVJUVWpKR2JsWnFRalpUTWxweVRWVlJTMWxVV2pCTlJVcFpVVmh3Ymxkc1RqTlZha0pOWWxVMVFtTkljSGRqVkd4eVUyNU9RMDlVUWxSVVYxbDNWRVZGTWxaR2NIUlVNMWt6Vm0xTmRsZHJSbUZUUlZwRlUxUktWRlJYVFROV01uaEhZV3RzYTJOUmNGRmhSbWd5VFZob2Jrc3dWbGRTZWs0d1VrUkJlRll3T1ZwaVNIQnlUMU56Y21Nd1VsSk9ibVJyWWpCdmVtTjZUbFJPZWxKMFVWUlNVMDlFVVhKaVNGcFdZVzVHVGxOclZrSlBSV1JYWlZkR1dsbHVTVEZEYlUxMldtcENSR1F4YUhsbFdHUktVa1ZHVWxGVlNuWk5SV3d6VlZWU1FsUXdTbTVVYkZwSlZWUm9RMUZYV1RSU1ZVcENWRlZPUW1OV1JqTlNTR1JhVWtaYVUwMUdVa0pWVldkMlVXdEdWbVF3UmpOU1ZVbExURE53UWxwRlNtNVViRnBKVlZSU1JsSnRaRkpXVjNkNVpHdHdjRk5FYkdoVVJuQk5UbXBzZFdWR2JGSlRNREZDVFVSYVdrMHdlRmxoTTJSRlZWWnNTMU15T1dGVFYyZ3lXVEExUWxWVlZrMVJiRVpDVWtGd2Jsb3dWa05SVlRFMVRIcEdTRkp0Vm5aYWExcHlWSHBhYUdWV2JFNVZNREZLWVVWYVdXVnRaRWxQV0ZaVlZGUkdkVTVFVWpGWGFsSlRVVlJDUlZOdVVsUmpSVVpHVjJ0NGRsWlZhRVpqUnpGMFVqTndNME5zYkVaa1ZXZ3dZbTFTV1U1V2FGWlZiVkpOVVZoYWFWbHROVmxoTUVaNFdWUkdXbGw1ZEVWa2EwNXlUREJhVVZaVmRFeE1NREI1U3pGUmVGTkdUa3hXVmtsNlVXNUtNbEZ1UW5kYVJXeFJZMjAwTUdNemIwdGtWbHAyU3pCVmVXRlhNVXBXTW1oNldsWkNlVkp0ZEc1a2FrWldXVEJTU1U5RVduZFdRemwxVERCb1VrNVZOVEpXTUhCclpEQnNXVTVWT1VwVFZrWXdVMFpTTkV4NlFUVlpWVFZPV1RGc1YyUXliRWhXVVhCVVducHJORmt4Y0hoWGJFcDFUbTVaY21WRVpIZGtNblJXVDFoT2VWRXdkekJYV0ZKcVZtNVdkVlpWZURCU1dGSlhVMVZhTVZkSVRUSlhhM1JXV1RCUmVGWXhTalJoUlc4d1pWZHdVazVYVWxaT2VYUXhRMnhDV2sxWVZuRmFNVUUxVDFWbmVGa3dlRTVSVmxKYVRrVjRhMVZGTVRKV2VUaDVUMWRaZGxZeFpHdFRWRXBQWXpCV05WSlViRVZrTTAwMFUydFdkbG95Vm5WTldHTnlWbFZTU1dGSVdrVldSa2t3WVhwSlMwMHpTbk5WV0c4MVRtcE9lbUZyVlRWalZUZ3pVVmhDYTFNemJESk9lbVIxVWpJeFVsQlJiM1JNVXpCMFRGVldUMUpEUWtSU1ZrcFZVMVZhU2xFd1JsVlNVekIwVEZNd2RFTm5QVDBpTENKMlpYSnBabWxqWVhScGIyNGlPbnQ5ZlYxOWZTd2lkR2x0Wlc5MWRITWlPbnQ5TENKMlpYSnphVzl1SWpvaU1pNHlMakFpZlN3aWJtVjBkMjl5YTJRaU9udDlMQ0p3WVhOemQyUWlPbnQ5TENKemRHOXlZV2RsSWpwN2ZTd2ljM2x6ZEdWdFpDSTZlMzE5IiwidmVyaWZpY2F0aW9uIjp7fX1dfSwidGltZW91dHMiOnt9LCJ2ZXJzaW9uIjoiMi4xLjAifSwibmV0d29ya2QiOnt9LCJwYXNzd2QiOnt9LCJzdG9yYWdlIjp7ImZpbGVzIjpbeyJmaWxlc3lzdGVtIjoicm9vdCIsImdyb3VwIjp7fSwicGF0aCI6Ii9ldGMvaG9zdG5hbWUiLCJ1c2VyIjp7fSwiY29udGVudHMiOnsic291cmNlIjoiZGF0YTp0ZXh0L3BsYWluO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFkyOXVkSEp2YkMxd2JHRnVaUzB5IiwidmVyaWZpY2F0aW9uIjp7fX0sIm1vZGUiOjQyMH0seyJmaWxlc3lzdGVtIjoicm9vdCIsImdyb3VwIjp7fSwicGF0aCI6Ii9ldGMvc3lzY29uZmlnL25ldHdvcmstc2NyaXB0cy9pZmNmZy1lbnMxOTIiLCJ1c2VyIjp7fSwiY29udGVudHMiOnsic291cmNlIjoiZGF0YTp0ZXh0L3BsYWluO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFZGbFFSVDFGZEdobGNtNWxkQXBDVDA5VVVGSlBWRTg5Ym05dVpRcE9RVTFGUFdWdWN6RTVNZ3BFUlZaSlEwVTlaVzV6TVRreUNrOU9RazlQVkQxNVpYTUtTVkJCUkVSU1BURXdMakU1TGpFeE5DNHlORFFLVUZKRlJrbFlQVEl6Q2tkQlZFVlhRVms5TVRBdU1Ua3VNVEUxTGpJMU5BcEVUMDFCU1U0OWRYQnBMbVV5WlM1aWIzTXVjbVZrYUdGMExtTnZiUXBFVGxNeFBURXdMakU1TGpFME15NHlORGNLUkU1VE1qMHhNQzR4T1M0eE5ETXVNalE0Q2c9PSIsInZlcmlmaWNhdGlvbiI6e319LCJtb2RlIjo0MjB9XX0sInN5c3RlbWQiOnt9fQ==",
                            "extra_config.guestinfo.ignition.config.data.encoding": "base64",
                            "firmware": "bios",
                            "folder": "upi",
                            "force_power_off": "true",
                            "guest_id": "rhel7_64Guest",
                            "guest_ip_addresses.#": "0",
                            "host_system_id": "host-37",
                            "hv_mode": "hvAuto",
                            "id": "4203e419-02c5-3211-58c9-b0222df3a0ca",
                            "latency_sensitivity": "normal",
                            "memory": "16384",
                            "memory_hot_add_enabled": "false",
                            "memory_limit": "-1",
                            "memory_reservation": "0",
                            "memory_share_count": "163840",
                            "memory_share_level": "normal",
                            "migrate_wait_timeout": "30",
                            "moid": "vm-1774",
                            "name": "control-plane-2",
                            "nested_hv_enabled": "false",
                            "network_interface.#": "1",
                            "network_interface.0.adapter_type": "vmxnet3",
                            "network_interface.0.bandwidth_limit": "-1",
                            "network_interface.0.bandwidth_reservation": "0",
                            "network_interface.0.bandwidth_share_count": "50",
                            "network_interface.0.bandwidth_share_level": "normal",
                            "network_interface.0.device_address": "pci:0:7",
                            "network_interface.0.key": "4000",
                            "network_interface.0.mac_address": "00:50:56:83:67:76",
                            "network_interface.0.network_id": "network-16",
                            "network_interface.0.use_static_mac": "false",
                            "num_cores_per_socket": "1",
                            "num_cpus": "4",
                            "reboot_required": "false",
                            "resource_pool_id": "resgroup-1770",
                            "run_tools_scripts_after_power_on": "true",
                            "run_tools_scripts_after_resume": "true",
                            "run_tools_scripts_before_guest_reboot": "false",
                            "run_tools_scripts_before_guest_shutdown": "true",
                            "run_tools_scripts_before_guest_standby": "true",
                            "scsi_bus_sharing": "noSharing",
                            "scsi_controller_count": "1",
                            "scsi_type": "pvscsi",
                            "shutdown_wait_timeout": "3",
                            "swap_placement_policy": "inherit",
                            "sync_time_with_host": "false",
                            "tags.#": "0",
                            "uuid": "4203e419-02c5-3211-58c9-b0222df3a0ca",
                            "vapp_transport.#": "1",
                            "vapp_transport.0": "com.vmware.guestInfo",
                            "vmware_tools_status": "guestToolsNotRunning",
                            "vmx_path": "control-plane-2/control-plane-2.vmx",
                            "wait_for_guest_ip_timeout": "0",
                            "wait_for_guest_net_routable": "false",
                            "wait_for_guest_net_timeout": "0"
                        },
                        "meta": {
                            "schema_version": "3"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "folder"
            ],
            "outputs": {
                "path": {
                    "sensitive": false,
                    "type": "string",
                    "value": "upi"
                }
            },
            "resources": {
                "vsphere_folder.folder": {
                    "type": "vsphere_folder",
                    "depends_on": [],
                    "primary": {
                        "id": "group-v1769",
                        "attributes": {
                            "custom_attributes.%": "0",
                            "datacenter_id": "datacenter-2",
                            "id": "group-v1769",
                            "path": "upi",
                            "tags.#": "0",
                            "type": "vm"
                        },
                        "meta": {
                            "schema_version": "1"
                        },
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                }
            },
            "depends_on": []
        },
        {
            "path": [
                "root",
                "resource_pool"
            ],
            "outputs": {
                "pool_id": {
                    "sensitive": false,
                    "type": "string",
                    "value": "resgroup-1770"
                }
            },
            "resources": {
                "data.vsphere_compute_cluster.compute_cluster": {
                    "type": "vsphere_compute_cluster",
                    "depends_on": [],
                    "primary": {
                        "id": "domain-c7",
                        "attributes": {
                            "datacenter_id": "datacenter-2",
                            "id": "domain-c7",
                            "name": "e2e",
                            "resource_pool_id": "resgroup-8"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                },
                "vsphere_resource_pool.resource_pool": {
                    "type": "vsphere_resource_pool",
                    "depends_on": [
                        "data.vsphere_compute_cluster.compute_cluster"
                    ],
                    "primary": {
                        "id": "resgroup-1770",
                        "attributes": {
                            "cpu_expandable": "true",
                            "cpu_limit": "-1",
                            "cpu_reservation": "0",
                            "cpu_share_level": "normal",
                            "cpu_shares": "4000",
                            "id": "resgroup-1770",
                            "memory_expandable": "true",
                            "memory_limit": "-1",
                            "memory_reservation": "0",
                            "memory_share_level": "normal",
                            "memory_shares": "163840",
                            "name": "upi",
                            "parent_resource_pool_id": "resgroup-8",
                            "tags.#": "0"
                        },
                        "meta": {},
                        "tainted": false
                    },
                    "deposed": [],
                    "provider": "provider.vsphere"
                }
            },
            "depends_on": []
        }
    ]
}
